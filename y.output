   0  $accept : start $end

   1  start :
   2        | global_declaration start

   3  global_declaration : function
   4                     | declaration ';'

   5  statements :
   6             | '{' P statements '}' Q
   7             | statement statements

   8  statement : return ';'
   9            | declaration ';'
  10            | assignment ';'
  11            | call ';'
  12            | if_statement lbl
  13            | while_statement lbl
  14            | for_statement lbl

  15  return : RETURN opt_expression
  16         |

  17  call_list :
  18            | var
  19            | call_list ',' var

  20  call : IDENTIFIER '(' call_list ')'

  21  declaration : type_specifier vars

  22  storage_specifier : AUTO
  23                    | REGISTER
  24                    | STATIC
  25                    | EXTERN
  26                    | TYPEDEF

  27  type_specifier : VOID
  28                 | CHAR
  29                 | SHORT
  30                 | INT
  31                 | LONG
  32                 | FLOAT
  33                 | DOUBLE
  34                 | SIGNED
  35                 | UNSIGNED
  36                 | compoundtype
  37                 | enumerator
  38                 | typedefname

  39  compoundtype : struct_or_union IDENTIFIER A '{' struct_declarations '}'
  40               | struct_or_union B '{' '}'
  41               | struct_or_union IDENTIFIER

  42  A :

  43  B :

  44  struct_or_union : STRUCT
  45                  | UNION

  46  struct_declarations : struct_declaration ';'
  47                      | struct_declaration ';' struct_declarations

  48  struct_declaration : type_specifier struct_member

  49  struct_member : var
  50                | var ',' struct_member

  51  enumerator : ENUMERATOR

  52  typedefname : TYPEDEF

  53  vars :
  54       | var
  55       | var ',' vars

  56  var : addresses IDENTIFIER arrays

  57  addresses :
  58            | '*' addresses
  59            | '&' addresses

  60  arrays :
  61         | '[' num ']' arrays

  62  num : NUMBER

  63  assignment : expression
  64             | postfix_expression assign_oper assignment

  65  assign_oper : '='
  66              | NEQ
  67              | ADDEQ
  68              | SUBEQ
  69              | MULEQ
  70              | DIVEQ
  71              | MODEQ
  72              | LSHIFTEQ
  73              | RSHIFTEQ
  74              | ANDEQ
  75              | XOREQ
  76              | OREQ

  77  function : declaration E '(' P param_list ')' F ';'
  78           | declaration E '(' P param_list ')' F G '{' statements '}'

  79  E :

  80  F :

  81  G :

  82  P :

  83  Q :

  84  param_list :
  85             | type_specifier var ',' param_list
  86             | type_specifier var

  87  if_statement : IF '(' expression ')' lbl statement

  88  while_statement : WHILE '(' lbl expression ')' lbl statement jump

  89  for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump

  90  opt_expression :
  91                 | assignment

  92  jump :

  93  expression : logical_or

  94  logical_or : logical_and
  95             | logical_or LOR lbl logical_and

  96  logical_and : additive_expression
  97              | logical_and LAND lbl additive_expression

  98  additive_expression : multiplicative_expression
  99                      | additive_expression '+' multiplicative_expression
 100                      | additive_expression '-' multiplicative_expression

 101  multiplicative_expression : postfix_expression
 102                            | multiplicative_expression '*' postfix_expression
 103                            | multiplicative_expression '/' postfix_expression

 104  postfix_expression : prefix_expression
 105                     | postfix_expression INCR
 106                     | postfix_expression DECR
 107                     | postfix_expression '.' IDENTIFIER
 108                     | postfix_expression DEREF IDENTIFIER

 109  prefix_expression : terminal
 110                    | INCR terminal
 111                    | DECR terminal

 112  arrayref :
 113           | arrayref '[' expression ']'

 114  terminal : TRUE
 115           | FALSE
 116           | IDENTIFIER arrayref
 117           | NUMBER

 118  lbl :

state 0
	$accept : . start $end  (0)
	start : .  (1)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	$end  reduce 1

	start  goto 14
	function  goto 15
	declaration  goto 16
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	global_declaration  goto 20
	compoundtype  goto 21
	struct_or_union  goto 22


state 1
	type_specifier : SIGNED .  (34)

	.  reduce 34


state 2
	struct_or_union : STRUCT .  (44)

	.  reduce 44


state 3
	typedefname : TYPEDEF .  (52)

	.  reduce 52


state 4
	struct_or_union : UNION .  (45)

	.  reduce 45


state 5
	type_specifier : VOID .  (27)

	.  reduce 27


state 6
	type_specifier : INT .  (30)

	.  reduce 30


state 7
	type_specifier : FLOAT .  (32)

	.  reduce 32


state 8
	type_specifier : CHAR .  (28)

	.  reduce 28


state 9
	type_specifier : SHORT .  (29)

	.  reduce 29


state 10
	type_specifier : LONG .  (31)

	.  reduce 31


state 11
	type_specifier : DOUBLE .  (33)

	.  reduce 33


state 12
	type_specifier : UNSIGNED .  (35)

	.  reduce 35


state 13
	enumerator : ENUMERATOR .  (51)

	.  reduce 51


state 14
	$accept : start . $end  (0)

	$end  accept


state 15
	global_declaration : function .  (3)

	.  reduce 3


state 16
	global_declaration : declaration . ';'  (4)
	function : declaration . E '(' P param_list ')' F ';'  (77)
	function : declaration . E '(' P param_list ')' F G '{' statements '}'  (78)
	E : .  (79)

	';'  shift 23
	'('  reduce 79

	E  goto 24


state 17
	type_specifier : enumerator .  (37)

	.  reduce 37


state 18
	type_specifier : typedefname .  (38)

	.  reduce 38


state 19
	declaration : type_specifier . vars  (21)
	vars : .  (53)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57
	';'  reduce 53
	'('  reduce 53

	vars  goto 27
	var  goto 28
	addresses  goto 29


state 20
	start : global_declaration . start  (2)
	start : .  (1)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	$end  reduce 1

	start  goto 30
	function  goto 15
	declaration  goto 16
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	global_declaration  goto 20
	compoundtype  goto 21
	struct_or_union  goto 22


state 21
	type_specifier : compoundtype .  (36)

	.  reduce 36


state 22
	compoundtype : struct_or_union . IDENTIFIER A '{' struct_declarations '}'  (39)
	compoundtype : struct_or_union . B '{' '}'  (40)
	compoundtype : struct_or_union . IDENTIFIER  (41)
	B : .  (43)

	IDENTIFIER  shift 31
	'{'  reduce 43

	B  goto 32


state 23
	global_declaration : declaration ';' .  (4)

	.  reduce 4


state 24
	function : declaration E . '(' P param_list ')' F ';'  (77)
	function : declaration E . '(' P param_list ')' F G '{' statements '}'  (78)

	'('  shift 33
	.  error


state 25
	addresses : '*' . addresses  (58)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	addresses  goto 34


state 26
	addresses : '&' . addresses  (59)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	addresses  goto 35


state 27
	declaration : type_specifier vars .  (21)

	.  reduce 21


state 28
	vars : var .  (54)
	vars : var . ',' vars  (55)

	','  shift 36
	';'  reduce 54
	'('  reduce 54


state 29
	var : addresses . IDENTIFIER arrays  (56)

	IDENTIFIER  shift 37
	.  error


state 30
	start : global_declaration start .  (2)

	.  reduce 2


state 31
	compoundtype : struct_or_union IDENTIFIER . A '{' struct_declarations '}'  (39)
	compoundtype : struct_or_union IDENTIFIER .  (41)
	A : .  (42)

	IDENTIFIER  reduce 41
	';'  reduce 41
	'{'  reduce 42
	'('  reduce 41
	'*'  reduce 41
	'&'  reduce 41

	A  goto 38


state 32
	compoundtype : struct_or_union B . '{' '}'  (40)

	'{'  shift 39
	.  error


state 33
	function : declaration E '(' . P param_list ')' F ';'  (77)
	function : declaration E '(' . P param_list ')' F G '{' statements '}'  (78)
	P : .  (82)

	.  reduce 82

	P  goto 40


state 34
	addresses : '*' addresses .  (58)

	.  reduce 58


state 35
	addresses : '&' addresses .  (59)

	.  reduce 59


state 36
	vars : var ',' . vars  (55)
	vars : .  (53)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57
	';'  reduce 53
	'('  reduce 53

	vars  goto 41
	var  goto 28
	addresses  goto 29


state 37
	var : addresses IDENTIFIER . arrays  (56)
	arrays : .  (60)

	'['  shift 42
	';'  reduce 60
	','  reduce 60
	'('  reduce 60
	')'  reduce 60

	arrays  goto 43


state 38
	compoundtype : struct_or_union IDENTIFIER A . '{' struct_declarations '}'  (39)

	'{'  shift 44
	.  error


state 39
	compoundtype : struct_or_union B '{' . '}'  (40)

	'}'  shift 45
	.  error


state 40
	function : declaration E '(' P . param_list ')' F ';'  (77)
	function : declaration E '(' P . param_list ')' F G '{' statements '}'  (78)
	param_list : .  (84)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	')'  reduce 84

	param_list  goto 46
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 47
	compoundtype  goto 21
	struct_or_union  goto 22


state 41
	vars : var ',' vars .  (55)

	.  reduce 55


state 42
	arrays : '[' . num ']' arrays  (61)

	NUMBER  shift 48
	.  error

	num  goto 49


state 43
	var : addresses IDENTIFIER arrays .  (56)

	.  reduce 56


state 44
	compoundtype : struct_or_union IDENTIFIER A '{' . struct_declarations '}'  (39)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	.  error

	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 50
	compoundtype  goto 21
	struct_or_union  goto 22
	struct_declarations  goto 51
	struct_declaration  goto 52


state 45
	compoundtype : struct_or_union B '{' '}' .  (40)

	.  reduce 40


state 46
	function : declaration E '(' P param_list . ')' F ';'  (77)
	function : declaration E '(' P param_list . ')' F G '{' statements '}'  (78)

	')'  shift 53
	.  error


state 47
	param_list : type_specifier . var ',' param_list  (85)
	param_list : type_specifier . var  (86)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	var  goto 54
	addresses  goto 29


state 48
	num : NUMBER .  (62)

	.  reduce 62


state 49
	arrays : '[' num . ']' arrays  (61)

	']'  shift 55
	.  error


state 50
	struct_declaration : type_specifier . struct_member  (48)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	var  goto 56
	addresses  goto 29
	struct_member  goto 57


state 51
	compoundtype : struct_or_union IDENTIFIER A '{' struct_declarations . '}'  (39)

	'}'  shift 58
	.  error


state 52
	struct_declarations : struct_declaration . ';'  (46)
	struct_declarations : struct_declaration . ';' struct_declarations  (47)

	';'  shift 59
	.  error


state 53
	function : declaration E '(' P param_list ')' . F ';'  (77)
	function : declaration E '(' P param_list ')' . F G '{' statements '}'  (78)
	F : .  (80)

	.  reduce 80

	F  goto 60


state 54
	param_list : type_specifier var . ',' param_list  (85)
	param_list : type_specifier var .  (86)

	','  shift 61
	')'  reduce 86


state 55
	arrays : '[' num ']' . arrays  (61)
	arrays : .  (60)

	'['  shift 42
	';'  reduce 60
	','  reduce 60
	'('  reduce 60
	')'  reduce 60

	arrays  goto 62


state 56
	struct_member : var .  (49)
	struct_member : var . ',' struct_member  (50)

	','  shift 63
	';'  reduce 49


state 57
	struct_declaration : type_specifier struct_member .  (48)

	.  reduce 48


state 58
	compoundtype : struct_or_union IDENTIFIER A '{' struct_declarations '}' .  (39)

	.  reduce 39


state 59
	struct_declarations : struct_declaration ';' .  (46)
	struct_declarations : struct_declaration ';' . struct_declarations  (47)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'}'  reduce 46

	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 50
	compoundtype  goto 21
	struct_or_union  goto 22
	struct_declarations  goto 64
	struct_declaration  goto 52


state 60
	function : declaration E '(' P param_list ')' F . ';'  (77)
	function : declaration E '(' P param_list ')' F . G '{' statements '}'  (78)
	G : .  (81)

	';'  shift 65
	'{'  reduce 81

	G  goto 66


state 61
	param_list : type_specifier var ',' . param_list  (85)
	param_list : .  (84)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	')'  reduce 84

	param_list  goto 67
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 47
	compoundtype  goto 21
	struct_or_union  goto 22


state 62
	arrays : '[' num ']' arrays .  (61)

	.  reduce 61


state 63
	struct_member : var ',' . struct_member  (50)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	var  goto 56
	addresses  goto 29
	struct_member  goto 68


state 64
	struct_declarations : struct_declaration ';' struct_declarations .  (47)

	.  reduce 47


state 65
	function : declaration E '(' P param_list ')' F ';' .  (77)

	.  reduce 77


state 66
	function : declaration E '(' P param_list ')' F G . '{' statements '}'  (78)

	'{'  shift 69
	.  error


state 67
	param_list : type_specifier var ',' param_list .  (85)

	.  reduce 85


state 68
	struct_member : var ',' struct_member .  (50)

	.  reduce 50


state 69
	function : declaration E '(' P param_list ')' F G '{' . statements '}'  (78)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 70
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 71
	FOR  shift 72
	IF  shift 73
	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 79
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 80
	';'  reduce 16
	'}'  reduce 5

	statement  goto 81
	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	if_statement  goto 88
	postfix_expression  goto 89
	prefix_expression  goto 90
	statements  goto 91
	assignment  goto 92
	while_statement  goto 93
	for_statement  goto 94
	declaration  goto 95
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 96
	call  goto 97
	compoundtype  goto 21
	struct_or_union  goto 22


state 70
	return : RETURN . opt_expression  (15)
	opt_expression : .  (90)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	';'  reduce 90

	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	postfix_expression  goto 89
	prefix_expression  goto 90
	assignment  goto 99
	opt_expression  goto 100


state 71
	while_statement : WHILE . '(' lbl expression ')' lbl statement jump  (88)

	'('  shift 101
	.  error


state 72
	for_statement : FOR . '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (89)

	'('  shift 102
	.  error


state 73
	if_statement : IF . '(' expression ')' lbl statement  (87)

	'('  shift 103
	.  error


state 74
	prefix_expression : INCR . terminal  (110)

	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	terminal  goto 104


state 75
	prefix_expression : DECR . terminal  (111)

	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	terminal  goto 105


state 76
	terminal : TRUE .  (114)

	.  reduce 114


state 77
	terminal : FALSE .  (115)

	.  reduce 115


state 78
	terminal : NUMBER .  (117)

	.  reduce 117


state 79
	call : IDENTIFIER . '(' call_list ')'  (20)
	terminal : IDENTIFIER . arrayref  (116)
	arrayref : .  (112)

	'('  shift 106
	DEREF  reduce 112
	MULEQ  reduce 112
	DIVEQ  reduce 112
	MODEQ  reduce 112
	ADDEQ  reduce 112
	SUBEQ  reduce 112
	LSHIFTEQ  reduce 112
	RSHIFTEQ  reduce 112
	ANDEQ  reduce 112
	XOREQ  reduce 112
	OREQ  reduce 112
	INCR  reduce 112
	DECR  reduce 112
	NEQ  reduce 112
	LAND  reduce 112
	LOR  reduce 112
	';'  reduce 112
	'*'  reduce 112
	'['  reduce 112
	'='  reduce 112
	'+'  reduce 112
	'-'  reduce 112
	'/'  reduce 112
	'.'  reduce 112

	arrayref  goto 107


state 80
	statements : '{' . P statements '}' Q  (6)
	P : .  (82)

	.  reduce 82

	P  goto 108


state 81
	statements : statement . statements  (7)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 70
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 71
	FOR  shift 72
	IF  shift 73
	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 79
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 80
	';'  reduce 16
	'}'  reduce 5

	statement  goto 81
	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	if_statement  goto 88
	postfix_expression  goto 89
	prefix_expression  goto 90
	statements  goto 109
	assignment  goto 92
	while_statement  goto 93
	for_statement  goto 94
	declaration  goto 95
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 96
	call  goto 97
	compoundtype  goto 21
	struct_or_union  goto 22


state 82
	expression : logical_or .  (93)
	logical_or : logical_or . LOR lbl logical_and  (95)

	LOR  shift 110
	';'  reduce 93
	')'  reduce 93
	']'  reduce 93


state 83
	logical_or : logical_and .  (94)
	logical_and : logical_and . LAND lbl additive_expression  (97)

	LAND  shift 111
	LOR  reduce 94
	';'  reduce 94
	')'  reduce 94
	']'  reduce 94


state 84
	prefix_expression : terminal .  (109)

	.  reduce 109


state 85
	assignment : expression .  (63)

	.  reduce 63


state 86
	additive_expression : multiplicative_expression .  (98)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (102)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (103)

	'*'  shift 112
	'/'  shift 113
	LAND  reduce 98
	LOR  reduce 98
	';'  reduce 98
	')'  reduce 98
	']'  reduce 98
	'+'  reduce 98
	'-'  reduce 98


state 87
	logical_and : additive_expression .  (96)
	additive_expression : additive_expression . '+' multiplicative_expression  (99)
	additive_expression : additive_expression . '-' multiplicative_expression  (100)

	'+'  shift 114
	'-'  shift 115
	LAND  reduce 96
	LOR  reduce 96
	';'  reduce 96
	')'  reduce 96
	']'  reduce 96


state 88
	statement : if_statement . lbl  (12)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 116


state 89
	assignment : postfix_expression . assign_oper assignment  (64)
	multiplicative_expression : postfix_expression .  (101)
	postfix_expression : postfix_expression . INCR  (105)
	postfix_expression : postfix_expression . DECR  (106)
	postfix_expression : postfix_expression . '.' IDENTIFIER  (107)
	postfix_expression : postfix_expression . DEREF IDENTIFIER  (108)

	DEREF  shift 117
	MULEQ  shift 118
	DIVEQ  shift 119
	MODEQ  shift 120
	ADDEQ  shift 121
	SUBEQ  shift 122
	LSHIFTEQ  shift 123
	RSHIFTEQ  shift 124
	ANDEQ  shift 125
	XOREQ  shift 126
	OREQ  shift 127
	INCR  shift 128
	DECR  shift 129
	NEQ  shift 130
	'='  shift 131
	'.'  shift 132
	LAND  reduce 101
	LOR  reduce 101
	';'  reduce 101
	')'  reduce 101
	'*'  reduce 101
	'+'  reduce 101
	'-'  reduce 101
	'/'  reduce 101

	assign_oper  goto 133


state 90
	postfix_expression : prefix_expression .  (104)

	.  reduce 104


state 91
	function : declaration E '(' P param_list ')' F G '{' statements . '}'  (78)

	'}'  shift 134
	.  error


state 92
	statement : assignment . ';'  (10)

	';'  shift 135
	.  error


state 93
	statement : while_statement . lbl  (13)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 136


state 94
	statement : for_statement . lbl  (14)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 137


state 95
	statement : declaration . ';'  (9)

	';'  shift 138
	.  error


state 96
	statement : return . ';'  (8)

	';'  shift 139
	.  error


state 97
	statement : call . ';'  (11)

	';'  shift 140
	.  error


state 98
	terminal : IDENTIFIER . arrayref  (116)
	arrayref : .  (112)

	.  reduce 112

	arrayref  goto 107


state 99
	opt_expression : assignment .  (91)

	.  reduce 91


state 100
	return : RETURN opt_expression .  (15)

	.  reduce 15


state 101
	while_statement : WHILE '(' . lbl expression ')' lbl statement jump  (88)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 141


state 102
	for_statement : FOR '(' . opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (89)
	opt_expression : .  (90)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	';'  reduce 90

	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	postfix_expression  goto 89
	prefix_expression  goto 90
	assignment  goto 99
	opt_expression  goto 142


state 103
	if_statement : IF '(' . expression ')' lbl statement  (87)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 143
	multiplicative_expression  goto 86
	additive_expression  goto 87
	postfix_expression  goto 144
	prefix_expression  goto 90


state 104
	prefix_expression : INCR terminal .  (110)

	.  reduce 110


state 105
	prefix_expression : DECR terminal .  (111)

	.  reduce 111


state 106
	call : IDENTIFIER '(' . call_list ')'  (20)
	call_list : .  (17)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57
	','  reduce 17
	')'  reduce 17

	var  goto 145
	addresses  goto 29
	call_list  goto 146


state 107
	arrayref : arrayref . '[' expression ']'  (113)
	terminal : IDENTIFIER arrayref .  (116)

	'['  shift 147
	DEREF  reduce 116
	MULEQ  reduce 116
	DIVEQ  reduce 116
	MODEQ  reduce 116
	ADDEQ  reduce 116
	SUBEQ  reduce 116
	LSHIFTEQ  reduce 116
	RSHIFTEQ  reduce 116
	ANDEQ  reduce 116
	XOREQ  reduce 116
	OREQ  reduce 116
	INCR  reduce 116
	DECR  reduce 116
	NEQ  reduce 116
	LAND  reduce 116
	LOR  reduce 116
	';'  reduce 116
	')'  reduce 116
	'*'  reduce 116
	']'  reduce 116
	'='  reduce 116
	'+'  reduce 116
	'-'  reduce 116
	'/'  reduce 116
	'.'  reduce 116


state 108
	statements : '{' P . statements '}' Q  (6)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 70
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 71
	FOR  shift 72
	IF  shift 73
	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 79
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 80
	';'  reduce 16
	'}'  reduce 5

	statement  goto 81
	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	if_statement  goto 88
	postfix_expression  goto 89
	prefix_expression  goto 90
	statements  goto 148
	assignment  goto 92
	while_statement  goto 93
	for_statement  goto 94
	declaration  goto 95
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 96
	call  goto 97
	compoundtype  goto 21
	struct_or_union  goto 22


state 109
	statements : statement statements .  (7)

	.  reduce 7


state 110
	logical_or : logical_or LOR . lbl logical_and  (95)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 149


state 111
	logical_and : logical_and LAND . lbl additive_expression  (97)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 150


state 112
	multiplicative_expression : multiplicative_expression '*' . postfix_expression  (102)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	terminal  goto 84
	postfix_expression  goto 151
	prefix_expression  goto 90


state 113
	multiplicative_expression : multiplicative_expression '/' . postfix_expression  (103)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	terminal  goto 84
	postfix_expression  goto 152
	prefix_expression  goto 90


state 114
	additive_expression : additive_expression '+' . multiplicative_expression  (99)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	terminal  goto 84
	multiplicative_expression  goto 153
	postfix_expression  goto 144
	prefix_expression  goto 90


state 115
	additive_expression : additive_expression '-' . multiplicative_expression  (100)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	terminal  goto 84
	multiplicative_expression  goto 154
	postfix_expression  goto 144
	prefix_expression  goto 90


state 116
	statement : if_statement lbl .  (12)

	.  reduce 12


state 117
	postfix_expression : postfix_expression DEREF . IDENTIFIER  (108)

	IDENTIFIER  shift 155
	.  error


state 118
	assign_oper : MULEQ .  (69)

	.  reduce 69


state 119
	assign_oper : DIVEQ .  (70)

	.  reduce 70


state 120
	assign_oper : MODEQ .  (71)

	.  reduce 71


state 121
	assign_oper : ADDEQ .  (67)

	.  reduce 67


state 122
	assign_oper : SUBEQ .  (68)

	.  reduce 68


state 123
	assign_oper : LSHIFTEQ .  (72)

	.  reduce 72


state 124
	assign_oper : RSHIFTEQ .  (73)

	.  reduce 73


state 125
	assign_oper : ANDEQ .  (74)

	.  reduce 74


state 126
	assign_oper : XOREQ .  (75)

	.  reduce 75


state 127
	assign_oper : OREQ .  (76)

	.  reduce 76


state 128
	postfix_expression : postfix_expression INCR .  (105)

	.  reduce 105


state 129
	postfix_expression : postfix_expression DECR .  (106)

	.  reduce 106


state 130
	assign_oper : NEQ .  (66)

	.  reduce 66


state 131
	assign_oper : '=' .  (65)

	.  reduce 65


state 132
	postfix_expression : postfix_expression '.' . IDENTIFIER  (107)

	IDENTIFIER  shift 156
	.  error


state 133
	assignment : postfix_expression assign_oper . assignment  (64)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	postfix_expression  goto 89
	prefix_expression  goto 90
	assignment  goto 157


state 134
	function : declaration E '(' P param_list ')' F G '{' statements '}' .  (78)

	.  reduce 78


state 135
	statement : assignment ';' .  (10)

	.  reduce 10


state 136
	statement : while_statement lbl .  (13)

	.  reduce 13


state 137
	statement : for_statement lbl .  (14)

	.  reduce 14


state 138
	statement : declaration ';' .  (9)

	.  reduce 9


state 139
	statement : return ';' .  (8)

	.  reduce 8


state 140
	statement : call ';' .  (11)

	.  reduce 11


state 141
	while_statement : WHILE '(' lbl . expression ')' lbl statement jump  (88)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 158
	multiplicative_expression  goto 86
	additive_expression  goto 87
	postfix_expression  goto 144
	prefix_expression  goto 90


state 142
	for_statement : FOR '(' opt_expression . ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (89)

	';'  shift 159
	.  error


state 143
	if_statement : IF '(' expression . ')' lbl statement  (87)

	')'  shift 160
	.  error


state 144
	multiplicative_expression : postfix_expression .  (101)
	postfix_expression : postfix_expression . INCR  (105)
	postfix_expression : postfix_expression . DECR  (106)
	postfix_expression : postfix_expression . '.' IDENTIFIER  (107)
	postfix_expression : postfix_expression . DEREF IDENTIFIER  (108)

	DEREF  shift 117
	INCR  shift 128
	DECR  shift 129
	'.'  shift 132
	LAND  reduce 101
	LOR  reduce 101
	';'  reduce 101
	')'  reduce 101
	'*'  reduce 101
	']'  reduce 101
	'+'  reduce 101
	'-'  reduce 101
	'/'  reduce 101


state 145
	call_list : var .  (18)

	.  reduce 18


state 146
	call_list : call_list . ',' var  (19)
	call : IDENTIFIER '(' call_list . ')'  (20)

	','  shift 161
	')'  shift 162
	.  error


state 147
	arrayref : arrayref '[' . expression ']'  (113)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 163
	multiplicative_expression  goto 86
	additive_expression  goto 87
	postfix_expression  goto 144
	prefix_expression  goto 90


state 148
	statements : '{' P statements . '}' Q  (6)

	'}'  shift 164
	.  error


state 149
	logical_or : logical_or LOR lbl . logical_and  (95)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	logical_and  goto 165
	terminal  goto 84
	multiplicative_expression  goto 86
	additive_expression  goto 87
	postfix_expression  goto 144
	prefix_expression  goto 90


state 150
	logical_and : logical_and LAND lbl . additive_expression  (97)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	.  error

	terminal  goto 84
	multiplicative_expression  goto 86
	additive_expression  goto 166
	postfix_expression  goto 144
	prefix_expression  goto 90


state 151
	multiplicative_expression : multiplicative_expression '*' postfix_expression .  (102)
	postfix_expression : postfix_expression . INCR  (105)
	postfix_expression : postfix_expression . DECR  (106)
	postfix_expression : postfix_expression . '.' IDENTIFIER  (107)
	postfix_expression : postfix_expression . DEREF IDENTIFIER  (108)

	DEREF  shift 117
	INCR  shift 128
	DECR  shift 129
	'.'  shift 132
	LAND  reduce 102
	LOR  reduce 102
	';'  reduce 102
	')'  reduce 102
	'*'  reduce 102
	']'  reduce 102
	'+'  reduce 102
	'-'  reduce 102
	'/'  reduce 102


state 152
	multiplicative_expression : multiplicative_expression '/' postfix_expression .  (103)
	postfix_expression : postfix_expression . INCR  (105)
	postfix_expression : postfix_expression . DECR  (106)
	postfix_expression : postfix_expression . '.' IDENTIFIER  (107)
	postfix_expression : postfix_expression . DEREF IDENTIFIER  (108)

	DEREF  shift 117
	INCR  shift 128
	DECR  shift 129
	'.'  shift 132
	LAND  reduce 103
	LOR  reduce 103
	';'  reduce 103
	')'  reduce 103
	'*'  reduce 103
	']'  reduce 103
	'+'  reduce 103
	'-'  reduce 103
	'/'  reduce 103


state 153
	additive_expression : additive_expression '+' multiplicative_expression .  (99)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (102)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (103)

	'*'  shift 112
	'/'  shift 113
	LAND  reduce 99
	LOR  reduce 99
	';'  reduce 99
	')'  reduce 99
	']'  reduce 99
	'+'  reduce 99
	'-'  reduce 99


state 154
	additive_expression : additive_expression '-' multiplicative_expression .  (100)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (102)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (103)

	'*'  shift 112
	'/'  shift 113
	LAND  reduce 100
	LOR  reduce 100
	';'  reduce 100
	')'  reduce 100
	']'  reduce 100
	'+'  reduce 100
	'-'  reduce 100


state 155
	postfix_expression : postfix_expression DEREF IDENTIFIER .  (108)

	.  reduce 108


state 156
	postfix_expression : postfix_expression '.' IDENTIFIER .  (107)

	.  reduce 107


state 157
	assignment : postfix_expression assign_oper assignment .  (64)

	.  reduce 64


state 158
	while_statement : WHILE '(' lbl expression . ')' lbl statement jump  (88)

	')'  shift 167
	.  error


state 159
	for_statement : FOR '(' opt_expression ';' . lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (89)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 168


state 160
	if_statement : IF '(' expression ')' . lbl statement  (87)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 169


state 161
	call_list : call_list ',' . var  (19)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	var  goto 170
	addresses  goto 29


state 162
	call : IDENTIFIER '(' call_list ')' .  (20)

	.  reduce 20


state 163
	arrayref : arrayref '[' expression . ']'  (113)

	']'  shift 171
	.  error


state 164
	statements : '{' P statements '}' . Q  (6)
	Q : .  (83)

	.  reduce 83

	Q  goto 172


state 165
	logical_or : logical_or LOR lbl logical_and .  (95)
	logical_and : logical_and . LAND lbl additive_expression  (97)

	LAND  shift 111
	LOR  reduce 95
	';'  reduce 95
	')'  reduce 95
	']'  reduce 95


state 166
	logical_and : logical_and LAND lbl additive_expression .  (97)
	additive_expression : additive_expression . '+' multiplicative_expression  (99)
	additive_expression : additive_expression . '-' multiplicative_expression  (100)

	'+'  shift 114
	'-'  shift 115
	LAND  reduce 97
	LOR  reduce 97
	';'  reduce 97
	')'  reduce 97
	']'  reduce 97


state 167
	while_statement : WHILE '(' lbl expression ')' . lbl statement jump  (88)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 173


state 168
	for_statement : FOR '(' opt_expression ';' lbl . opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (89)
	opt_expression : .  (90)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	';'  reduce 90

	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	postfix_expression  goto 89
	prefix_expression  goto 90
	assignment  goto 99
	opt_expression  goto 174


state 169
	if_statement : IF '(' expression ')' lbl . statement  (87)
	return : .  (16)

	RETURN  shift 70
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 71
	FOR  shift 72
	IF  shift 73
	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 79
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 175
	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	if_statement  goto 88
	postfix_expression  goto 89
	prefix_expression  goto 90
	assignment  goto 92
	while_statement  goto 93
	for_statement  goto 94
	declaration  goto 95
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 96
	call  goto 97
	compoundtype  goto 21
	struct_or_union  goto 22


state 170
	call_list : call_list ',' var .  (19)

	.  reduce 19


state 171
	arrayref : arrayref '[' expression ']' .  (113)

	.  reduce 113


state 172
	statements : '{' P statements '}' Q .  (6)

	.  reduce 6


state 173
	while_statement : WHILE '(' lbl expression ')' lbl . statement jump  (88)
	return : .  (16)

	RETURN  shift 70
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 71
	FOR  shift 72
	IF  shift 73
	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 79
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 176
	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	if_statement  goto 88
	postfix_expression  goto 89
	prefix_expression  goto 90
	assignment  goto 92
	while_statement  goto 93
	for_statement  goto 94
	declaration  goto 95
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 96
	call  goto 97
	compoundtype  goto 21
	struct_or_union  goto 22


state 174
	for_statement : FOR '(' opt_expression ';' lbl opt_expression . ';' lbl opt_expression jump ')' lbl statement jump  (89)

	';'  shift 177
	.  error


state 175
	if_statement : IF '(' expression ')' lbl statement .  (87)

	.  reduce 87


state 176
	while_statement : WHILE '(' lbl expression ')' lbl statement . jump  (88)
	jump : .  (92)

	.  reduce 92

	jump  goto 178


state 177
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' . lbl opt_expression jump ')' lbl statement jump  (89)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 179


state 178
	while_statement : WHILE '(' lbl expression ')' lbl statement jump .  (88)

	.  reduce 88


state 179
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl . opt_expression jump ')' lbl statement jump  (89)
	opt_expression : .  (90)

	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 98
	')'  reduce 90

	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	postfix_expression  goto 89
	prefix_expression  goto 90
	assignment  goto 99
	opt_expression  goto 180


state 180
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression . jump ')' lbl statement jump  (89)
	jump : .  (92)

	.  reduce 92

	jump  goto 181


state 181
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump . ')' lbl statement jump  (89)

	')'  shift 182
	.  error


state 182
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' . lbl statement jump  (89)
	lbl : .  (118)

	.  reduce 118

	lbl  goto 183


state 183
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl . statement jump  (89)
	return : .  (16)

	RETURN  shift 70
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 71
	FOR  shift 72
	IF  shift 73
	INCR  shift 74
	DECR  shift 75
	TRUE  shift 76
	FALSE  shift 77
	NUMBER  shift 78
	IDENTIFIER  shift 79
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 184
	logical_or  goto 82
	logical_and  goto 83
	terminal  goto 84
	expression  goto 85
	multiplicative_expression  goto 86
	additive_expression  goto 87
	if_statement  goto 88
	postfix_expression  goto 89
	prefix_expression  goto 90
	assignment  goto 92
	while_statement  goto 93
	for_statement  goto 94
	declaration  goto 95
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 96
	call  goto 97
	compoundtype  goto 21
	struct_or_union  goto 22


state 184
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement . jump  (89)
	jump : .  (92)

	.  reduce 92

	jump  goto 185


state 185
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump .  (89)

	.  reduce 89


Rules never reduced:
	storage_specifier : AUTO  (22)
	storage_specifier : REGISTER  (23)
	storage_specifier : STATIC  (24)
	storage_specifier : EXTERN  (25)
	storage_specifier : TYPEDEF  (26)


76 terminals, 49 nonterminals
119 grammar rules, 186 states
