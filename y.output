   0  $accept : start $end

   1  start :
   2        | global_declaration start

   3  global_declaration : function
   4                     | declaration ';'

   5  statements :
   6             | '{' P statements '}' Q
   7             | statement statements

   8  statement : return ';'
   9            | declaration ';'
  10            | assignment ';'
  11            | call ';'
  12            | if_statement lbl
  13            | while_statement lbl
  14            | for_statement lbl

  15  return : RETURN opt_expression
  16         |

  17  call_list :
  18            | var
  19            | call_list ',' var

  20  call : IDENTIFIER '(' call_list ')'

  21  declaration : type_specifier vars

  22  storage_specifier : AUTO
  23                    | REGISTER
  24                    | STATIC
  25                    | EXTERN
  26                    | TYPEDEF

  27  type_specifier : VOID
  28                 | CHAR
  29                 | SHORT
  30                 | INT
  31                 | LONG
  32                 | FLOAT
  33                 | DOUBLE
  34                 | SIGNED
  35                 | UNSIGNED
  36                 | compoundtype
  37                 | enumerator
  38                 | typedefname

  39  compoundtype : struct_or_union IDENTIFIER A '{' struct_declarations '}'
  40               | struct_or_union '{' '}'
  41               | struct_or_union IDENTIFIER

  42  A :

  43  struct_or_union : STRUCT
  44                  | UNION

  45  struct_declarations : struct_declaration ';'
  46                      | struct_declaration struct_declarations

  47  struct_declaration : type_specifier struct_member

  48  struct_member : var
  49                | var ',' struct_member

  50  enumerator : ENUMERATOR

  51  typedefname : TYPEDEF

  52  vars :
  53       | var
  54       | var ',' vars

  55  var : addresses IDENTIFIER arrays

  56  addresses :
  57            | '*' addresses
  58            | '&' addresses

  59  arrays :
  60         | '[' num ']' arrays

  61  num : NUMBER

  62  assignment : expression
  63             | postfix_expression assign_oper assignment

  64  assign_oper : '='
  65              | NEQ
  66              | ADDEQ
  67              | SUBEQ
  68              | MULEQ
  69              | DIVEQ
  70              | MODEQ
  71              | LSHIFTEQ
  72              | RSHIFTEQ
  73              | ANDEQ
  74              | XOREQ
  75              | OREQ

  76  function : declaration E '(' P param_list ')' F ';'
  77           | declaration E '(' P param_list ')' F G '{' statements '}'

  78  E :

  79  F :

  80  G :

  81  P :

  82  Q :

  83  param_list :
  84             | type_specifier var ',' param_list
  85             | type_specifier var

  86  if_statement : IF '(' expression ')' lbl statement

  87  while_statement : WHILE '(' lbl expression ')' lbl statement jump

  88  for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump

  89  opt_expression :
  90                 | assignment

  91  jump :

  92  expression : logical_or

  93  logical_or : logical_and
  94             | logical_or LOR lbl logical_and

  95  logical_and : additive_expression
  96              | logical_and LAND lbl additive_expression

  97  additive_expression : multiplicative_expression
  98                      | additive_expression '+' multiplicative_expression
  99                      | additive_expression '-' multiplicative_expression

 100  multiplicative_expression : postfix_expression
 101                            | multiplicative_expression '*' postfix_expression
 102                            | multiplicative_expression '/' postfix_expression

 103  postfix_expression : prefix_expression
 104                     | postfix_expression INCR
 105                     | postfix_expression DECR
 106                     | postfix_expression '.' IDENTIFIER
 107                     | postfix_expression DEREF IDENTIFIER

 108  prefix_expression : terminal
 109                    | INCR terminal
 110                    | DECR terminal

 111  arrayref :
 112           | arrayref '[' expression ']'

 113  terminal : TRUE
 114           | FALSE
 115           | IDENTIFIER arrayref
 116           | NUMBER

 117  lbl :

state 0
	$accept : . start $end  (0)
	start : .  (1)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	$end  reduce 1

	start  goto 14
	function  goto 15
	declaration  goto 16
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	global_declaration  goto 20
	compoundtype  goto 21
	struct_or_union  goto 22


state 1
	type_specifier : SIGNED .  (34)

	.  reduce 34


state 2
	struct_or_union : STRUCT .  (43)

	.  reduce 43


state 3
	typedefname : TYPEDEF .  (51)

	.  reduce 51


state 4
	struct_or_union : UNION .  (44)

	.  reduce 44


state 5
	type_specifier : VOID .  (27)

	.  reduce 27


state 6
	type_specifier : INT .  (30)

	.  reduce 30


state 7
	type_specifier : FLOAT .  (32)

	.  reduce 32


state 8
	type_specifier : CHAR .  (28)

	.  reduce 28


state 9
	type_specifier : SHORT .  (29)

	.  reduce 29


state 10
	type_specifier : LONG .  (31)

	.  reduce 31


state 11
	type_specifier : DOUBLE .  (33)

	.  reduce 33


state 12
	type_specifier : UNSIGNED .  (35)

	.  reduce 35


state 13
	enumerator : ENUMERATOR .  (50)

	.  reduce 50


state 14
	$accept : start . $end  (0)

	$end  accept


state 15
	global_declaration : function .  (3)

	.  reduce 3


state 16
	global_declaration : declaration . ';'  (4)
	function : declaration . E '(' P param_list ')' F ';'  (76)
	function : declaration . E '(' P param_list ')' F G '{' statements '}'  (77)
	E : .  (78)

	';'  shift 23
	'('  reduce 78

	E  goto 24


state 17
	type_specifier : enumerator .  (37)

	.  reduce 37


state 18
	type_specifier : typedefname .  (38)

	.  reduce 38


state 19
	declaration : type_specifier . vars  (21)
	vars : .  (52)
	addresses : .  (56)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 56
	';'  reduce 52
	'('  reduce 52

	vars  goto 27
	var  goto 28
	addresses  goto 29


state 20
	start : global_declaration . start  (2)
	start : .  (1)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	$end  reduce 1

	start  goto 30
	function  goto 15
	declaration  goto 16
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	global_declaration  goto 20
	compoundtype  goto 21
	struct_or_union  goto 22


state 21
	type_specifier : compoundtype .  (36)

	.  reduce 36


state 22
	compoundtype : struct_or_union . IDENTIFIER A '{' struct_declarations '}'  (39)
	compoundtype : struct_or_union . '{' '}'  (40)
	compoundtype : struct_or_union . IDENTIFIER  (41)

	IDENTIFIER  shift 31
	'{'  shift 32
	.  error


state 23
	global_declaration : declaration ';' .  (4)

	.  reduce 4


state 24
	function : declaration E . '(' P param_list ')' F ';'  (76)
	function : declaration E . '(' P param_list ')' F G '{' statements '}'  (77)

	'('  shift 33
	.  error


state 25
	addresses : '*' . addresses  (57)
	addresses : .  (56)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 56

	addresses  goto 34


state 26
	addresses : '&' . addresses  (58)
	addresses : .  (56)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 56

	addresses  goto 35


state 27
	declaration : type_specifier vars .  (21)

	.  reduce 21


state 28
	vars : var .  (53)
	vars : var . ',' vars  (54)

	','  shift 36
	';'  reduce 53
	'('  reduce 53


state 29
	var : addresses . IDENTIFIER arrays  (55)

	IDENTIFIER  shift 37
	.  error


state 30
	start : global_declaration start .  (2)

	.  reduce 2


state 31
	compoundtype : struct_or_union IDENTIFIER . A '{' struct_declarations '}'  (39)
	compoundtype : struct_or_union IDENTIFIER .  (41)
	A : .  (42)

	IDENTIFIER  reduce 41
	';'  reduce 41
	'{'  reduce 42
	'('  reduce 41
	'*'  reduce 41
	'&'  reduce 41

	A  goto 38


state 32
	compoundtype : struct_or_union '{' . '}'  (40)

	'}'  shift 39
	.  error


state 33
	function : declaration E '(' . P param_list ')' F ';'  (76)
	function : declaration E '(' . P param_list ')' F G '{' statements '}'  (77)
	P : .  (81)

	.  reduce 81

	P  goto 40


state 34
	addresses : '*' addresses .  (57)

	.  reduce 57


state 35
	addresses : '&' addresses .  (58)

	.  reduce 58


state 36
	vars : var ',' . vars  (54)
	vars : .  (52)
	addresses : .  (56)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 56
	';'  reduce 52
	'('  reduce 52

	vars  goto 41
	var  goto 28
	addresses  goto 29


state 37
	var : addresses IDENTIFIER . arrays  (55)
	arrays : .  (59)

	'['  shift 42
	SIGNED  reduce 59
	STRUCT  reduce 59
	TYPEDEF  reduce 59
	UNION  reduce 59
	VOID  reduce 59
	INT  reduce 59
	FLOAT  reduce 59
	CHAR  reduce 59
	SHORT  reduce 59
	LONG  reduce 59
	DOUBLE  reduce 59
	UNSIGNED  reduce 59
	ENUMERATOR  reduce 59
	';'  reduce 59
	','  reduce 59
	'('  reduce 59
	')'  reduce 59

	arrays  goto 43


state 38
	compoundtype : struct_or_union IDENTIFIER A . '{' struct_declarations '}'  (39)

	'{'  shift 44
	.  error


state 39
	compoundtype : struct_or_union '{' '}' .  (40)

	.  reduce 40


state 40
	function : declaration E '(' P . param_list ')' F ';'  (76)
	function : declaration E '(' P . param_list ')' F G '{' statements '}'  (77)
	param_list : .  (83)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	')'  reduce 83

	param_list  goto 45
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 46
	compoundtype  goto 21
	struct_or_union  goto 22


state 41
	vars : var ',' vars .  (54)

	.  reduce 54


state 42
	arrays : '[' . num ']' arrays  (60)

	NUMBER  shift 47
	.  error

	num  goto 48


state 43
	var : addresses IDENTIFIER arrays .  (55)

	.  reduce 55


state 44
	compoundtype : struct_or_union IDENTIFIER A '{' . struct_declarations '}'  (39)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	.  error

	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 49
	compoundtype  goto 21
	struct_or_union  goto 22
	struct_declarations  goto 50
	struct_declaration  goto 51


state 45
	function : declaration E '(' P param_list . ')' F ';'  (76)
	function : declaration E '(' P param_list . ')' F G '{' statements '}'  (77)

	')'  shift 52
	.  error


state 46
	param_list : type_specifier . var ',' param_list  (84)
	param_list : type_specifier . var  (85)
	addresses : .  (56)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 56

	var  goto 53
	addresses  goto 29


state 47
	num : NUMBER .  (61)

	.  reduce 61


state 48
	arrays : '[' num . ']' arrays  (60)

	']'  shift 54
	.  error


state 49
	struct_declaration : type_specifier . struct_member  (47)
	addresses : .  (56)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 56

	var  goto 55
	addresses  goto 29
	struct_member  goto 56


state 50
	compoundtype : struct_or_union IDENTIFIER A '{' struct_declarations . '}'  (39)

	'}'  shift 57
	.  error


state 51
	struct_declarations : struct_declaration . ';'  (45)
	struct_declarations : struct_declaration . struct_declarations  (46)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  shift 58
	.  error

	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 49
	compoundtype  goto 21
	struct_or_union  goto 22
	struct_declarations  goto 59
	struct_declaration  goto 51


state 52
	function : declaration E '(' P param_list ')' . F ';'  (76)
	function : declaration E '(' P param_list ')' . F G '{' statements '}'  (77)
	F : .  (79)

	.  reduce 79

	F  goto 60


state 53
	param_list : type_specifier var . ',' param_list  (84)
	param_list : type_specifier var .  (85)

	','  shift 61
	')'  reduce 85


state 54
	arrays : '[' num ']' . arrays  (60)
	arrays : .  (59)

	'['  shift 42
	SIGNED  reduce 59
	STRUCT  reduce 59
	TYPEDEF  reduce 59
	UNION  reduce 59
	VOID  reduce 59
	INT  reduce 59
	FLOAT  reduce 59
	CHAR  reduce 59
	SHORT  reduce 59
	LONG  reduce 59
	DOUBLE  reduce 59
	UNSIGNED  reduce 59
	ENUMERATOR  reduce 59
	';'  reduce 59
	','  reduce 59
	'('  reduce 59
	')'  reduce 59

	arrays  goto 62


state 55
	struct_member : var .  (48)
	struct_member : var . ',' struct_member  (49)

	','  shift 63
	SIGNED  reduce 48
	STRUCT  reduce 48
	TYPEDEF  reduce 48
	UNION  reduce 48
	VOID  reduce 48
	INT  reduce 48
	FLOAT  reduce 48
	CHAR  reduce 48
	SHORT  reduce 48
	LONG  reduce 48
	DOUBLE  reduce 48
	UNSIGNED  reduce 48
	ENUMERATOR  reduce 48
	';'  reduce 48


state 56
	struct_declaration : type_specifier struct_member .  (47)

	.  reduce 47


state 57
	compoundtype : struct_or_union IDENTIFIER A '{' struct_declarations '}' .  (39)

	.  reduce 39


state 58
	struct_declarations : struct_declaration ';' .  (45)

	.  reduce 45


state 59
	struct_declarations : struct_declaration struct_declarations .  (46)

	.  reduce 46


state 60
	function : declaration E '(' P param_list ')' F . ';'  (76)
	function : declaration E '(' P param_list ')' F . G '{' statements '}'  (77)
	G : .  (80)

	';'  shift 64
	'{'  reduce 80

	G  goto 65


state 61
	param_list : type_specifier var ',' . param_list  (84)
	param_list : .  (83)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	')'  reduce 83

	param_list  goto 66
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 46
	compoundtype  goto 21
	struct_or_union  goto 22


state 62
	arrays : '[' num ']' arrays .  (60)

	.  reduce 60


state 63
	struct_member : var ',' . struct_member  (49)
	addresses : .  (56)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 56

	var  goto 55
	addresses  goto 29
	struct_member  goto 67


state 64
	function : declaration E '(' P param_list ')' F ';' .  (76)

	.  reduce 76


state 65
	function : declaration E '(' P param_list ')' F G . '{' statements '}'  (77)

	'{'  shift 68
	.  error


state 66
	param_list : type_specifier var ',' param_list .  (84)

	.  reduce 84


state 67
	struct_member : var ',' struct_member .  (49)

	.  reduce 49


state 68
	function : declaration E '(' P param_list ')' F G '{' . statements '}'  (77)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 79
	';'  reduce 16
	'}'  reduce 5

	statement  goto 80
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	statements  goto 90
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 69
	return : RETURN . opt_expression  (15)
	opt_expression : .  (89)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	';'  reduce 89

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 98
	opt_expression  goto 99


state 70
	while_statement : WHILE . '(' lbl expression ')' lbl statement jump  (87)

	'('  shift 100
	.  error


state 71
	for_statement : FOR . '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (88)

	'('  shift 101
	.  error


state 72
	if_statement : IF . '(' expression ')' lbl statement  (86)

	'('  shift 102
	.  error


state 73
	prefix_expression : INCR . terminal  (109)

	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 103


state 74
	prefix_expression : DECR . terminal  (110)

	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 104


state 75
	terminal : TRUE .  (113)

	.  reduce 113


state 76
	terminal : FALSE .  (114)

	.  reduce 114


state 77
	terminal : NUMBER .  (116)

	.  reduce 116


state 78
	call : IDENTIFIER . '(' call_list ')'  (20)
	terminal : IDENTIFIER . arrayref  (115)
	arrayref : .  (111)

	'('  shift 105
	DEREF  reduce 111
	MULEQ  reduce 111
	DIVEQ  reduce 111
	MODEQ  reduce 111
	ADDEQ  reduce 111
	SUBEQ  reduce 111
	LSHIFTEQ  reduce 111
	RSHIFTEQ  reduce 111
	ANDEQ  reduce 111
	XOREQ  reduce 111
	OREQ  reduce 111
	INCR  reduce 111
	DECR  reduce 111
	NEQ  reduce 111
	LAND  reduce 111
	LOR  reduce 111
	';'  reduce 111
	'*'  reduce 111
	'['  reduce 111
	'='  reduce 111
	'+'  reduce 111
	'-'  reduce 111
	'/'  reduce 111
	'.'  reduce 111

	arrayref  goto 106


state 79
	statements : '{' . P statements '}' Q  (6)
	P : .  (81)

	.  reduce 81

	P  goto 107


state 80
	statements : statement . statements  (7)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 79
	';'  reduce 16
	'}'  reduce 5

	statement  goto 80
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	statements  goto 108
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 81
	expression : logical_or .  (92)
	logical_or : logical_or . LOR lbl logical_and  (94)

	LOR  shift 109
	';'  reduce 92
	')'  reduce 92
	']'  reduce 92


state 82
	logical_or : logical_and .  (93)
	logical_and : logical_and . LAND lbl additive_expression  (96)

	LAND  shift 110
	LOR  reduce 93
	';'  reduce 93
	')'  reduce 93
	']'  reduce 93


state 83
	prefix_expression : terminal .  (108)

	.  reduce 108


state 84
	assignment : expression .  (62)

	.  reduce 62


state 85
	additive_expression : multiplicative_expression .  (97)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (101)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (102)

	'*'  shift 111
	'/'  shift 112
	LAND  reduce 97
	LOR  reduce 97
	';'  reduce 97
	')'  reduce 97
	']'  reduce 97
	'+'  reduce 97
	'-'  reduce 97


state 86
	logical_and : additive_expression .  (95)
	additive_expression : additive_expression . '+' multiplicative_expression  (98)
	additive_expression : additive_expression . '-' multiplicative_expression  (99)

	'+'  shift 113
	'-'  shift 114
	LAND  reduce 95
	LOR  reduce 95
	';'  reduce 95
	')'  reduce 95
	']'  reduce 95


state 87
	statement : if_statement . lbl  (12)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 115


state 88
	assignment : postfix_expression . assign_oper assignment  (63)
	multiplicative_expression : postfix_expression .  (100)
	postfix_expression : postfix_expression . INCR  (104)
	postfix_expression : postfix_expression . DECR  (105)
	postfix_expression : postfix_expression . '.' IDENTIFIER  (106)
	postfix_expression : postfix_expression . DEREF IDENTIFIER  (107)

	DEREF  shift 116
	MULEQ  shift 117
	DIVEQ  shift 118
	MODEQ  shift 119
	ADDEQ  shift 120
	SUBEQ  shift 121
	LSHIFTEQ  shift 122
	RSHIFTEQ  shift 123
	ANDEQ  shift 124
	XOREQ  shift 125
	OREQ  shift 126
	INCR  shift 127
	DECR  shift 128
	NEQ  shift 129
	'='  shift 130
	'.'  shift 131
	LAND  reduce 100
	LOR  reduce 100
	';'  reduce 100
	')'  reduce 100
	'*'  reduce 100
	'+'  reduce 100
	'-'  reduce 100
	'/'  reduce 100

	assign_oper  goto 132


state 89
	postfix_expression : prefix_expression .  (103)

	.  reduce 103


state 90
	function : declaration E '(' P param_list ')' F G '{' statements . '}'  (77)

	'}'  shift 133
	.  error


state 91
	statement : assignment . ';'  (10)

	';'  shift 134
	.  error


state 92
	statement : while_statement . lbl  (13)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 135


state 93
	statement : for_statement . lbl  (14)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 136


state 94
	statement : declaration . ';'  (9)

	';'  shift 137
	.  error


state 95
	statement : return . ';'  (8)

	';'  shift 138
	.  error


state 96
	statement : call . ';'  (11)

	';'  shift 139
	.  error


state 97
	terminal : IDENTIFIER . arrayref  (115)
	arrayref : .  (111)

	.  reduce 111

	arrayref  goto 106


state 98
	opt_expression : assignment .  (90)

	.  reduce 90


state 99
	return : RETURN opt_expression .  (15)

	.  reduce 15


state 100
	while_statement : WHILE '(' . lbl expression ')' lbl statement jump  (87)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 140


state 101
	for_statement : FOR '(' . opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (88)
	opt_expression : .  (89)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	';'  reduce 89

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 98
	opt_expression  goto 141


state 102
	if_statement : IF '(' . expression ')' lbl statement  (86)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 142
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 143
	prefix_expression  goto 89


state 103
	prefix_expression : INCR terminal .  (109)

	.  reduce 109


state 104
	prefix_expression : DECR terminal .  (110)

	.  reduce 110


state 105
	call : IDENTIFIER '(' . call_list ')'  (20)
	call_list : .  (17)
	addresses : .  (56)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 56
	','  reduce 17
	')'  reduce 17

	var  goto 144
	addresses  goto 29
	call_list  goto 145


state 106
	arrayref : arrayref . '[' expression ']'  (112)
	terminal : IDENTIFIER arrayref .  (115)

	'['  shift 146
	DEREF  reduce 115
	MULEQ  reduce 115
	DIVEQ  reduce 115
	MODEQ  reduce 115
	ADDEQ  reduce 115
	SUBEQ  reduce 115
	LSHIFTEQ  reduce 115
	RSHIFTEQ  reduce 115
	ANDEQ  reduce 115
	XOREQ  reduce 115
	OREQ  reduce 115
	INCR  reduce 115
	DECR  reduce 115
	NEQ  reduce 115
	LAND  reduce 115
	LOR  reduce 115
	';'  reduce 115
	')'  reduce 115
	'*'  reduce 115
	']'  reduce 115
	'='  reduce 115
	'+'  reduce 115
	'-'  reduce 115
	'/'  reduce 115
	'.'  reduce 115


state 107
	statements : '{' P . statements '}' Q  (6)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 79
	';'  reduce 16
	'}'  reduce 5

	statement  goto 80
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	statements  goto 147
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 108
	statements : statement statements .  (7)

	.  reduce 7


state 109
	logical_or : logical_or LOR . lbl logical_and  (94)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 148


state 110
	logical_and : logical_and LAND . lbl additive_expression  (96)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 149


state 111
	multiplicative_expression : multiplicative_expression '*' . postfix_expression  (101)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 83
	postfix_expression  goto 150
	prefix_expression  goto 89


state 112
	multiplicative_expression : multiplicative_expression '/' . postfix_expression  (102)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 83
	postfix_expression  goto 151
	prefix_expression  goto 89


state 113
	additive_expression : additive_expression '+' . multiplicative_expression  (98)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 83
	multiplicative_expression  goto 152
	postfix_expression  goto 143
	prefix_expression  goto 89


state 114
	additive_expression : additive_expression '-' . multiplicative_expression  (99)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 83
	multiplicative_expression  goto 153
	postfix_expression  goto 143
	prefix_expression  goto 89


state 115
	statement : if_statement lbl .  (12)

	.  reduce 12


state 116
	postfix_expression : postfix_expression DEREF . IDENTIFIER  (107)

	IDENTIFIER  shift 154
	.  error


state 117
	assign_oper : MULEQ .  (68)

	.  reduce 68


state 118
	assign_oper : DIVEQ .  (69)

	.  reduce 69


state 119
	assign_oper : MODEQ .  (70)

	.  reduce 70


state 120
	assign_oper : ADDEQ .  (66)

	.  reduce 66


state 121
	assign_oper : SUBEQ .  (67)

	.  reduce 67


state 122
	assign_oper : LSHIFTEQ .  (71)

	.  reduce 71


state 123
	assign_oper : RSHIFTEQ .  (72)

	.  reduce 72


state 124
	assign_oper : ANDEQ .  (73)

	.  reduce 73


state 125
	assign_oper : XOREQ .  (74)

	.  reduce 74


state 126
	assign_oper : OREQ .  (75)

	.  reduce 75


state 127
	postfix_expression : postfix_expression INCR .  (104)

	.  reduce 104


state 128
	postfix_expression : postfix_expression DECR .  (105)

	.  reduce 105


state 129
	assign_oper : NEQ .  (65)

	.  reduce 65


state 130
	assign_oper : '=' .  (64)

	.  reduce 64


state 131
	postfix_expression : postfix_expression '.' . IDENTIFIER  (106)

	IDENTIFIER  shift 155
	.  error


state 132
	assignment : postfix_expression assign_oper . assignment  (63)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 156


state 133
	function : declaration E '(' P param_list ')' F G '{' statements '}' .  (77)

	.  reduce 77


state 134
	statement : assignment ';' .  (10)

	.  reduce 10


state 135
	statement : while_statement lbl .  (13)

	.  reduce 13


state 136
	statement : for_statement lbl .  (14)

	.  reduce 14


state 137
	statement : declaration ';' .  (9)

	.  reduce 9


state 138
	statement : return ';' .  (8)

	.  reduce 8


state 139
	statement : call ';' .  (11)

	.  reduce 11


state 140
	while_statement : WHILE '(' lbl . expression ')' lbl statement jump  (87)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 157
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 143
	prefix_expression  goto 89


state 141
	for_statement : FOR '(' opt_expression . ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (88)

	';'  shift 158
	.  error


state 142
	if_statement : IF '(' expression . ')' lbl statement  (86)

	')'  shift 159
	.  error


state 143
	multiplicative_expression : postfix_expression .  (100)
	postfix_expression : postfix_expression . INCR  (104)
	postfix_expression : postfix_expression . DECR  (105)
	postfix_expression : postfix_expression . '.' IDENTIFIER  (106)
	postfix_expression : postfix_expression . DEREF IDENTIFIER  (107)

	DEREF  shift 116
	INCR  shift 127
	DECR  shift 128
	'.'  shift 131
	LAND  reduce 100
	LOR  reduce 100
	';'  reduce 100
	')'  reduce 100
	'*'  reduce 100
	']'  reduce 100
	'+'  reduce 100
	'-'  reduce 100
	'/'  reduce 100


state 144
	call_list : var .  (18)

	.  reduce 18


state 145
	call_list : call_list . ',' var  (19)
	call : IDENTIFIER '(' call_list . ')'  (20)

	','  shift 160
	')'  shift 161
	.  error


state 146
	arrayref : arrayref '[' . expression ']'  (112)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 162
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 143
	prefix_expression  goto 89


state 147
	statements : '{' P statements . '}' Q  (6)

	'}'  shift 163
	.  error


state 148
	logical_or : logical_or LOR lbl . logical_and  (94)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	logical_and  goto 164
	terminal  goto 83
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 143
	prefix_expression  goto 89


state 149
	logical_and : logical_and LAND lbl . additive_expression  (96)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 83
	multiplicative_expression  goto 85
	additive_expression  goto 165
	postfix_expression  goto 143
	prefix_expression  goto 89


state 150
	multiplicative_expression : multiplicative_expression '*' postfix_expression .  (101)
	postfix_expression : postfix_expression . INCR  (104)
	postfix_expression : postfix_expression . DECR  (105)
	postfix_expression : postfix_expression . '.' IDENTIFIER  (106)
	postfix_expression : postfix_expression . DEREF IDENTIFIER  (107)

	DEREF  shift 116
	INCR  shift 127
	DECR  shift 128
	'.'  shift 131
	LAND  reduce 101
	LOR  reduce 101
	';'  reduce 101
	')'  reduce 101
	'*'  reduce 101
	']'  reduce 101
	'+'  reduce 101
	'-'  reduce 101
	'/'  reduce 101


state 151
	multiplicative_expression : multiplicative_expression '/' postfix_expression .  (102)
	postfix_expression : postfix_expression . INCR  (104)
	postfix_expression : postfix_expression . DECR  (105)
	postfix_expression : postfix_expression . '.' IDENTIFIER  (106)
	postfix_expression : postfix_expression . DEREF IDENTIFIER  (107)

	DEREF  shift 116
	INCR  shift 127
	DECR  shift 128
	'.'  shift 131
	LAND  reduce 102
	LOR  reduce 102
	';'  reduce 102
	')'  reduce 102
	'*'  reduce 102
	']'  reduce 102
	'+'  reduce 102
	'-'  reduce 102
	'/'  reduce 102


state 152
	additive_expression : additive_expression '+' multiplicative_expression .  (98)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (101)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (102)

	'*'  shift 111
	'/'  shift 112
	LAND  reduce 98
	LOR  reduce 98
	';'  reduce 98
	')'  reduce 98
	']'  reduce 98
	'+'  reduce 98
	'-'  reduce 98


state 153
	additive_expression : additive_expression '-' multiplicative_expression .  (99)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (101)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (102)

	'*'  shift 111
	'/'  shift 112
	LAND  reduce 99
	LOR  reduce 99
	';'  reduce 99
	')'  reduce 99
	']'  reduce 99
	'+'  reduce 99
	'-'  reduce 99


state 154
	postfix_expression : postfix_expression DEREF IDENTIFIER .  (107)

	.  reduce 107


state 155
	postfix_expression : postfix_expression '.' IDENTIFIER .  (106)

	.  reduce 106


state 156
	assignment : postfix_expression assign_oper assignment .  (63)

	.  reduce 63


state 157
	while_statement : WHILE '(' lbl expression . ')' lbl statement jump  (87)

	')'  shift 166
	.  error


state 158
	for_statement : FOR '(' opt_expression ';' . lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (88)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 167


state 159
	if_statement : IF '(' expression ')' . lbl statement  (86)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 168


state 160
	call_list : call_list ',' . var  (19)
	addresses : .  (56)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 56

	var  goto 169
	addresses  goto 29


state 161
	call : IDENTIFIER '(' call_list ')' .  (20)

	.  reduce 20


state 162
	arrayref : arrayref '[' expression . ']'  (112)

	']'  shift 170
	.  error


state 163
	statements : '{' P statements '}' . Q  (6)
	Q : .  (82)

	.  reduce 82

	Q  goto 171


state 164
	logical_or : logical_or LOR lbl logical_and .  (94)
	logical_and : logical_and . LAND lbl additive_expression  (96)

	LAND  shift 110
	LOR  reduce 94
	';'  reduce 94
	')'  reduce 94
	']'  reduce 94


state 165
	logical_and : logical_and LAND lbl additive_expression .  (96)
	additive_expression : additive_expression . '+' multiplicative_expression  (98)
	additive_expression : additive_expression . '-' multiplicative_expression  (99)

	'+'  shift 113
	'-'  shift 114
	LAND  reduce 96
	LOR  reduce 96
	';'  reduce 96
	')'  reduce 96
	']'  reduce 96


state 166
	while_statement : WHILE '(' lbl expression ')' . lbl statement jump  (87)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 172


state 167
	for_statement : FOR '(' opt_expression ';' lbl . opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (88)
	opt_expression : .  (89)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	';'  reduce 89

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 98
	opt_expression  goto 173


state 168
	if_statement : IF '(' expression ')' lbl . statement  (86)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 174
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 169
	call_list : call_list ',' var .  (19)

	.  reduce 19


state 170
	arrayref : arrayref '[' expression ']' .  (112)

	.  reduce 112


state 171
	statements : '{' P statements '}' Q .  (6)

	.  reduce 6


state 172
	while_statement : WHILE '(' lbl expression ')' lbl . statement jump  (87)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 175
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 173
	for_statement : FOR '(' opt_expression ';' lbl opt_expression . ';' lbl opt_expression jump ')' lbl statement jump  (88)

	';'  shift 176
	.  error


state 174
	if_statement : IF '(' expression ')' lbl statement .  (86)

	.  reduce 86


state 175
	while_statement : WHILE '(' lbl expression ')' lbl statement . jump  (87)
	jump : .  (91)

	.  reduce 91

	jump  goto 177


state 176
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' . lbl opt_expression jump ')' lbl statement jump  (88)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 178


state 177
	while_statement : WHILE '(' lbl expression ')' lbl statement jump .  (87)

	.  reduce 87


state 178
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl . opt_expression jump ')' lbl statement jump  (88)
	opt_expression : .  (89)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	')'  reduce 89

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 98
	opt_expression  goto 179


state 179
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression . jump ')' lbl statement jump  (88)
	jump : .  (91)

	.  reduce 91

	jump  goto 180


state 180
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump . ')' lbl statement jump  (88)

	')'  shift 181
	.  error


state 181
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' . lbl statement jump  (88)
	lbl : .  (117)

	.  reduce 117

	lbl  goto 182


state 182
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl . statement jump  (88)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 183
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 183
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement . jump  (88)
	jump : .  (91)

	.  reduce 91

	jump  goto 184


state 184
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump .  (88)

	.  reduce 88


Rules never reduced:
	storage_specifier : AUTO  (22)
	storage_specifier : REGISTER  (23)
	storage_specifier : STATIC  (24)
	storage_specifier : EXTERN  (25)
	storage_specifier : TYPEDEF  (26)


76 terminals, 48 nonterminals
118 grammar rules, 185 states
