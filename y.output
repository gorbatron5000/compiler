   0  $accept : start $end

   1  start :
   2        | global_declaration start

   3  global_declaration : function
   4                     | declaration ';'

   5  statements :
   6             | '{' P statements '}' Q
   7             | statement statements

   8  statement : return ';'
   9            | declaration ';'
  10            | assignment ';'
  11            | call ';'
  12            | if_statement lbl
  13            | while_statement lbl
  14            | for_statement lbl

  15  return : RETURN opt_expression
  16         |

  17  call_list :
  18            | var
  19            | call_list ',' var

  20  call : IDENTIFIER '(' call_list ')'

  21  declaration : type_specifier vars

  22  storage_specifier : AUTO
  23                    | REGISTER
  24                    | STATIC
  25                    | EXTERN
  26                    | TYPEDEF

  27  type_specifier : VOID
  28                 | CHAR
  29                 | SHORT
  30                 | INT
  31                 | LONG
  32                 | FLOAT
  33                 | DOUBLE
  34                 | SIGNED
  35                 | UNSIGNED
  36                 | compoundtype
  37                 | enumerator
  38                 | typedefname

  39  compoundtype : struct_or_union IDENTIFIER A '{' struct_declarations '}'
  40               | struct_or_union '{' '}'
  41               | struct_or_union IDENTIFIER A

  42  A :

  43  struct_or_union : STRUCT
  44                  | UNION

  45  struct_declarations :
  46                      | struct_declaration ';'
  47                      | struct_declaration struct_declarations

  48  struct_declaration : type_specifier struct_member

  49  struct_member : var
  50                | var ',' struct_member

  51  enumerator : ENUMERATOR

  52  typedefname : TYPEDEF

  53  vars :
  54       | var
  55       | var ',' vars

  56  var : addresses IDENTIFIER arrays

  57  addresses :
  58            | '*' addresses
  59            | '&' addresses

  60  arrays :
  61         | '[' num ']' arrays

  62  num : NUMBER

  63  assignment : expression
  64             | postfix_expression assign_oper assignment

  65  assign_oper : '='
  66              | NEQ
  67              | ADDEQ
  68              | SUBEQ
  69              | MULEQ
  70              | DIVEQ
  71              | MODEQ
  72              | LSHIFTEQ
  73              | RSHIFTEQ
  74              | ANDEQ
  75              | XOREQ
  76              | OREQ

  77  function : declaration E '(' P param_list ')' F ';'
  78           | declaration E '(' P param_list ')' F G '{' statements '}'

  79  E :

  80  F :

  81  G :

  82  P :

  83  Q :

  84  param_list :
  85             | type_specifier var ',' param_list
  86             | type_specifier var

  87  if_statement : IF '(' expression ')' lbl statement

  88  while_statement : WHILE '(' lbl expression ')' lbl statement jump

  89  for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump

  90  opt_expression :
  91                 | assignment

  92  jump :

  93  expression : logical_or

  94  logical_or : logical_and
  95             | logical_or LOR lbl logical_and

  96  logical_and : additive_expression
  97              | logical_and LAND lbl additive_expression

  98  additive_expression : multiplicative_expression
  99                      | additive_expression '+' multiplicative_expression
 100                      | additive_expression '-' multiplicative_expression

 101  multiplicative_expression : postfix_expression
 102                            | multiplicative_expression '*' postfix_expression
 103                            | multiplicative_expression '/' postfix_expression

 104  postfix_expression : prefix_expression
 105                     | prefix_expression INCR
 106                     | prefix_expression DECR

 107  prefix_expression : terminal
 108                    | INCR terminal
 109                    | DECR terminal

 110  arrayref :
 111           | arrayref '[' expression ']'

 112  terminal : TRUE
 113           | FALSE
 114           | IDENTIFIER arrayref
 115           | NUMBER

 116  lbl :

state 0
	$accept : . start $end  (0)
	start : .  (1)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	$end  reduce 1

	start  goto 14
	function  goto 15
	declaration  goto 16
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	global_declaration  goto 20
	compoundtype  goto 21
	struct_or_union  goto 22


state 1
	type_specifier : SIGNED .  (34)

	.  reduce 34


state 2
	struct_or_union : STRUCT .  (43)

	.  reduce 43


state 3
	typedefname : TYPEDEF .  (52)

	.  reduce 52


state 4
	struct_or_union : UNION .  (44)

	.  reduce 44


state 5
	type_specifier : VOID .  (27)

	.  reduce 27


state 6
	type_specifier : INT .  (30)

	.  reduce 30


state 7
	type_specifier : FLOAT .  (32)

	.  reduce 32


state 8
	type_specifier : CHAR .  (28)

	.  reduce 28


state 9
	type_specifier : SHORT .  (29)

	.  reduce 29


state 10
	type_specifier : LONG .  (31)

	.  reduce 31


state 11
	type_specifier : DOUBLE .  (33)

	.  reduce 33


state 12
	type_specifier : UNSIGNED .  (35)

	.  reduce 35


state 13
	enumerator : ENUMERATOR .  (51)

	.  reduce 51


state 14
	$accept : start . $end  (0)

	$end  accept


state 15
	global_declaration : function .  (3)

	.  reduce 3


state 16
	global_declaration : declaration . ';'  (4)
	function : declaration . E '(' P param_list ')' F ';'  (77)
	function : declaration . E '(' P param_list ')' F G '{' statements '}'  (78)
	E : .  (79)

	';'  shift 23
	'('  reduce 79

	E  goto 24


state 17
	type_specifier : enumerator .  (37)

	.  reduce 37


state 18
	type_specifier : typedefname .  (38)

	.  reduce 38


state 19
	declaration : type_specifier . vars  (21)
	vars : .  (53)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57
	';'  reduce 53
	'('  reduce 53

	vars  goto 27
	var  goto 28
	addresses  goto 29


state 20
	start : global_declaration . start  (2)
	start : .  (1)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	$end  reduce 1

	start  goto 30
	function  goto 15
	declaration  goto 16
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	global_declaration  goto 20
	compoundtype  goto 21
	struct_or_union  goto 22


state 21
	type_specifier : compoundtype .  (36)

	.  reduce 36


state 22
	compoundtype : struct_or_union . IDENTIFIER A '{' struct_declarations '}'  (39)
	compoundtype : struct_or_union . '{' '}'  (40)
	compoundtype : struct_or_union . IDENTIFIER A  (41)

	IDENTIFIER  shift 31
	'{'  shift 32
	.  error


state 23
	global_declaration : declaration ';' .  (4)

	.  reduce 4


state 24
	function : declaration E . '(' P param_list ')' F ';'  (77)
	function : declaration E . '(' P param_list ')' F G '{' statements '}'  (78)

	'('  shift 33
	.  error


state 25
	addresses : '*' . addresses  (58)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	addresses  goto 34


state 26
	addresses : '&' . addresses  (59)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	addresses  goto 35


state 27
	declaration : type_specifier vars .  (21)

	.  reduce 21


state 28
	vars : var .  (54)
	vars : var . ',' vars  (55)

	','  shift 36
	';'  reduce 54
	'('  reduce 54


state 29
	var : addresses . IDENTIFIER arrays  (56)

	IDENTIFIER  shift 37
	.  error


state 30
	start : global_declaration start .  (2)

	.  reduce 2


state 31
	compoundtype : struct_or_union IDENTIFIER . A '{' struct_declarations '}'  (39)
	compoundtype : struct_or_union IDENTIFIER . A  (41)
	A : .  (42)

	.  reduce 42

	A  goto 38


state 32
	compoundtype : struct_or_union '{' . '}'  (40)

	'}'  shift 39
	.  error


state 33
	function : declaration E '(' . P param_list ')' F ';'  (77)
	function : declaration E '(' . P param_list ')' F G '{' statements '}'  (78)
	P : .  (82)

	.  reduce 82

	P  goto 40


state 34
	addresses : '*' addresses .  (58)

	.  reduce 58


state 35
	addresses : '&' addresses .  (59)

	.  reduce 59


state 36
	vars : var ',' . vars  (55)
	vars : .  (53)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57
	';'  reduce 53
	'('  reduce 53

	vars  goto 41
	var  goto 28
	addresses  goto 29


state 37
	var : addresses IDENTIFIER . arrays  (56)
	arrays : .  (60)

	'['  shift 42
	SIGNED  reduce 60
	STRUCT  reduce 60
	TYPEDEF  reduce 60
	UNION  reduce 60
	VOID  reduce 60
	INT  reduce 60
	FLOAT  reduce 60
	CHAR  reduce 60
	SHORT  reduce 60
	LONG  reduce 60
	DOUBLE  reduce 60
	UNSIGNED  reduce 60
	ENUMERATOR  reduce 60
	';'  reduce 60
	'}'  reduce 60
	','  reduce 60
	'('  reduce 60
	')'  reduce 60

	arrays  goto 43


state 38
	compoundtype : struct_or_union IDENTIFIER A . '{' struct_declarations '}'  (39)
	compoundtype : struct_or_union IDENTIFIER A .  (41)

	'{'  shift 44
	IDENTIFIER  reduce 41
	';'  reduce 41
	'('  reduce 41
	'*'  reduce 41
	'&'  reduce 41


state 39
	compoundtype : struct_or_union '{' '}' .  (40)

	.  reduce 40


state 40
	function : declaration E '(' P . param_list ')' F ';'  (77)
	function : declaration E '(' P . param_list ')' F G '{' statements '}'  (78)
	param_list : .  (84)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	')'  reduce 84

	param_list  goto 45
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 46
	compoundtype  goto 21
	struct_or_union  goto 22


state 41
	vars : var ',' vars .  (55)

	.  reduce 55


state 42
	arrays : '[' . num ']' arrays  (61)

	NUMBER  shift 47
	.  error

	num  goto 48


state 43
	var : addresses IDENTIFIER arrays .  (56)

	.  reduce 56


state 44
	compoundtype : struct_or_union IDENTIFIER A '{' . struct_declarations '}'  (39)
	struct_declarations : .  (45)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'}'  reduce 45

	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 49
	compoundtype  goto 21
	struct_or_union  goto 22
	struct_declarations  goto 50
	struct_declaration  goto 51


state 45
	function : declaration E '(' P param_list . ')' F ';'  (77)
	function : declaration E '(' P param_list . ')' F G '{' statements '}'  (78)

	')'  shift 52
	.  error


state 46
	param_list : type_specifier . var ',' param_list  (85)
	param_list : type_specifier . var  (86)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	var  goto 53
	addresses  goto 29


state 47
	num : NUMBER .  (62)

	.  reduce 62


state 48
	arrays : '[' num . ']' arrays  (61)

	']'  shift 54
	.  error


state 49
	struct_declaration : type_specifier . struct_member  (48)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	var  goto 55
	addresses  goto 29
	struct_member  goto 56


state 50
	compoundtype : struct_or_union IDENTIFIER A '{' struct_declarations . '}'  (39)

	'}'  shift 57
	.  error


state 51
	struct_declarations : struct_declaration . ';'  (46)
	struct_declarations : struct_declaration . struct_declarations  (47)
	struct_declarations : .  (45)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  shift 58
	'}'  reduce 45

	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 49
	compoundtype  goto 21
	struct_or_union  goto 22
	struct_declarations  goto 59
	struct_declaration  goto 51


state 52
	function : declaration E '(' P param_list ')' . F ';'  (77)
	function : declaration E '(' P param_list ')' . F G '{' statements '}'  (78)
	F : .  (80)

	.  reduce 80

	F  goto 60


state 53
	param_list : type_specifier var . ',' param_list  (85)
	param_list : type_specifier var .  (86)

	','  shift 61
	')'  reduce 86


state 54
	arrays : '[' num ']' . arrays  (61)
	arrays : .  (60)

	'['  shift 42
	SIGNED  reduce 60
	STRUCT  reduce 60
	TYPEDEF  reduce 60
	UNION  reduce 60
	VOID  reduce 60
	INT  reduce 60
	FLOAT  reduce 60
	CHAR  reduce 60
	SHORT  reduce 60
	LONG  reduce 60
	DOUBLE  reduce 60
	UNSIGNED  reduce 60
	ENUMERATOR  reduce 60
	';'  reduce 60
	'}'  reduce 60
	','  reduce 60
	'('  reduce 60
	')'  reduce 60

	arrays  goto 62


state 55
	struct_member : var .  (49)
	struct_member : var . ',' struct_member  (50)

	','  shift 63
	SIGNED  reduce 49
	STRUCT  reduce 49
	TYPEDEF  reduce 49
	UNION  reduce 49
	VOID  reduce 49
	INT  reduce 49
	FLOAT  reduce 49
	CHAR  reduce 49
	SHORT  reduce 49
	LONG  reduce 49
	DOUBLE  reduce 49
	UNSIGNED  reduce 49
	ENUMERATOR  reduce 49
	';'  reduce 49
	'}'  reduce 49


state 56
	struct_declaration : type_specifier struct_member .  (48)

	.  reduce 48


state 57
	compoundtype : struct_or_union IDENTIFIER A '{' struct_declarations '}' .  (39)

	.  reduce 39


state 58
	struct_declarations : struct_declaration ';' .  (46)

	.  reduce 46


state 59
	struct_declarations : struct_declaration struct_declarations .  (47)

	.  reduce 47


state 60
	function : declaration E '(' P param_list ')' F . ';'  (77)
	function : declaration E '(' P param_list ')' F . G '{' statements '}'  (78)
	G : .  (81)

	';'  shift 64
	'{'  reduce 81

	G  goto 65


state 61
	param_list : type_specifier var ',' . param_list  (85)
	param_list : .  (84)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	')'  reduce 84

	param_list  goto 66
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 46
	compoundtype  goto 21
	struct_or_union  goto 22


state 62
	arrays : '[' num ']' arrays .  (61)

	.  reduce 61


state 63
	struct_member : var ',' . struct_member  (50)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	var  goto 55
	addresses  goto 29
	struct_member  goto 67


state 64
	function : declaration E '(' P param_list ')' F ';' .  (77)

	.  reduce 77


state 65
	function : declaration E '(' P param_list ')' F G . '{' statements '}'  (78)

	'{'  shift 68
	.  error


state 66
	param_list : type_specifier var ',' param_list .  (85)

	.  reduce 85


state 67
	struct_member : var ',' struct_member .  (50)

	.  reduce 50


state 68
	function : declaration E '(' P param_list ')' F G '{' . statements '}'  (78)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 79
	';'  reduce 16
	'}'  reduce 5

	statement  goto 80
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	statements  goto 90
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 69
	return : RETURN . opt_expression  (15)
	opt_expression : .  (90)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	';'  reduce 90

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 98
	opt_expression  goto 99


state 70
	while_statement : WHILE . '(' lbl expression ')' lbl statement jump  (88)

	'('  shift 100
	.  error


state 71
	for_statement : FOR . '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (89)

	'('  shift 101
	.  error


state 72
	if_statement : IF . '(' expression ')' lbl statement  (87)

	'('  shift 102
	.  error


state 73
	prefix_expression : INCR . terminal  (108)

	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 103


state 74
	prefix_expression : DECR . terminal  (109)

	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 104


state 75
	terminal : TRUE .  (112)

	.  reduce 112


state 76
	terminal : FALSE .  (113)

	.  reduce 113


state 77
	terminal : NUMBER .  (115)

	.  reduce 115


state 78
	call : IDENTIFIER . '(' call_list ')'  (20)
	terminal : IDENTIFIER . arrayref  (114)
	arrayref : .  (110)

	'('  shift 105
	MULEQ  reduce 110
	DIVEQ  reduce 110
	MODEQ  reduce 110
	ADDEQ  reduce 110
	SUBEQ  reduce 110
	LSHIFTEQ  reduce 110
	RSHIFTEQ  reduce 110
	ANDEQ  reduce 110
	XOREQ  reduce 110
	OREQ  reduce 110
	INCR  reduce 110
	DECR  reduce 110
	NEQ  reduce 110
	LAND  reduce 110
	LOR  reduce 110
	';'  reduce 110
	'*'  reduce 110
	'['  reduce 110
	'='  reduce 110
	'+'  reduce 110
	'-'  reduce 110
	'/'  reduce 110

	arrayref  goto 106


state 79
	statements : '{' . P statements '}' Q  (6)
	P : .  (82)

	.  reduce 82

	P  goto 107


state 80
	statements : statement . statements  (7)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 79
	';'  reduce 16
	'}'  reduce 5

	statement  goto 80
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	statements  goto 108
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 81
	expression : logical_or .  (93)
	logical_or : logical_or . LOR lbl logical_and  (95)

	LOR  shift 109
	';'  reduce 93
	')'  reduce 93
	']'  reduce 93


state 82
	logical_or : logical_and .  (94)
	logical_and : logical_and . LAND lbl additive_expression  (97)

	LAND  shift 110
	LOR  reduce 94
	';'  reduce 94
	')'  reduce 94
	']'  reduce 94


state 83
	prefix_expression : terminal .  (107)

	.  reduce 107


state 84
	assignment : expression .  (63)

	.  reduce 63


state 85
	additive_expression : multiplicative_expression .  (98)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (102)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (103)

	'*'  shift 111
	'/'  shift 112
	LAND  reduce 98
	LOR  reduce 98
	';'  reduce 98
	')'  reduce 98
	']'  reduce 98
	'+'  reduce 98
	'-'  reduce 98


state 86
	logical_and : additive_expression .  (96)
	additive_expression : additive_expression . '+' multiplicative_expression  (99)
	additive_expression : additive_expression . '-' multiplicative_expression  (100)

	'+'  shift 113
	'-'  shift 114
	LAND  reduce 96
	LOR  reduce 96
	';'  reduce 96
	')'  reduce 96
	']'  reduce 96


state 87
	statement : if_statement . lbl  (12)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 115


state 88
	assignment : postfix_expression . assign_oper assignment  (64)
	multiplicative_expression : postfix_expression .  (101)

	MULEQ  shift 116
	DIVEQ  shift 117
	MODEQ  shift 118
	ADDEQ  shift 119
	SUBEQ  shift 120
	LSHIFTEQ  shift 121
	RSHIFTEQ  shift 122
	ANDEQ  shift 123
	XOREQ  shift 124
	OREQ  shift 125
	NEQ  shift 126
	'='  shift 127
	LAND  reduce 101
	LOR  reduce 101
	';'  reduce 101
	')'  reduce 101
	'*'  reduce 101
	'+'  reduce 101
	'-'  reduce 101
	'/'  reduce 101

	assign_oper  goto 128


state 89
	postfix_expression : prefix_expression .  (104)
	postfix_expression : prefix_expression . INCR  (105)
	postfix_expression : prefix_expression . DECR  (106)

	INCR  shift 129
	DECR  shift 130
	MULEQ  reduce 104
	DIVEQ  reduce 104
	MODEQ  reduce 104
	ADDEQ  reduce 104
	SUBEQ  reduce 104
	LSHIFTEQ  reduce 104
	RSHIFTEQ  reduce 104
	ANDEQ  reduce 104
	XOREQ  reduce 104
	OREQ  reduce 104
	NEQ  reduce 104
	LAND  reduce 104
	LOR  reduce 104
	';'  reduce 104
	')'  reduce 104
	'*'  reduce 104
	']'  reduce 104
	'='  reduce 104
	'+'  reduce 104
	'-'  reduce 104
	'/'  reduce 104


state 90
	function : declaration E '(' P param_list ')' F G '{' statements . '}'  (78)

	'}'  shift 131
	.  error


state 91
	statement : assignment . ';'  (10)

	';'  shift 132
	.  error


state 92
	statement : while_statement . lbl  (13)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 133


state 93
	statement : for_statement . lbl  (14)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 134


state 94
	statement : declaration . ';'  (9)

	';'  shift 135
	.  error


state 95
	statement : return . ';'  (8)

	';'  shift 136
	.  error


state 96
	statement : call . ';'  (11)

	';'  shift 137
	.  error


state 97
	terminal : IDENTIFIER . arrayref  (114)
	arrayref : .  (110)

	.  reduce 110

	arrayref  goto 106


state 98
	opt_expression : assignment .  (91)

	.  reduce 91


state 99
	return : RETURN opt_expression .  (15)

	.  reduce 15


state 100
	while_statement : WHILE '(' . lbl expression ')' lbl statement jump  (88)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 138


state 101
	for_statement : FOR '(' . opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (89)
	opt_expression : .  (90)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	';'  reduce 90

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 98
	opt_expression  goto 139


state 102
	if_statement : IF '(' . expression ')' lbl statement  (87)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 140
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 141
	prefix_expression  goto 89


state 103
	prefix_expression : INCR terminal .  (108)

	.  reduce 108


state 104
	prefix_expression : DECR terminal .  (109)

	.  reduce 109


state 105
	call : IDENTIFIER '(' . call_list ')'  (20)
	call_list : .  (17)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57
	','  reduce 17
	')'  reduce 17

	var  goto 142
	addresses  goto 29
	call_list  goto 143


state 106
	arrayref : arrayref . '[' expression ']'  (111)
	terminal : IDENTIFIER arrayref .  (114)

	'['  shift 144
	MULEQ  reduce 114
	DIVEQ  reduce 114
	MODEQ  reduce 114
	ADDEQ  reduce 114
	SUBEQ  reduce 114
	LSHIFTEQ  reduce 114
	RSHIFTEQ  reduce 114
	ANDEQ  reduce 114
	XOREQ  reduce 114
	OREQ  reduce 114
	INCR  reduce 114
	DECR  reduce 114
	NEQ  reduce 114
	LAND  reduce 114
	LOR  reduce 114
	';'  reduce 114
	')'  reduce 114
	'*'  reduce 114
	']'  reduce 114
	'='  reduce 114
	'+'  reduce 114
	'-'  reduce 114
	'/'  reduce 114


state 107
	statements : '{' P . statements '}' Q  (6)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 79
	';'  reduce 16
	'}'  reduce 5

	statement  goto 80
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	statements  goto 145
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 108
	statements : statement statements .  (7)

	.  reduce 7


state 109
	logical_or : logical_or LOR . lbl logical_and  (95)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 146


state 110
	logical_and : logical_and LAND . lbl additive_expression  (97)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 147


state 111
	multiplicative_expression : multiplicative_expression '*' . postfix_expression  (102)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 83
	postfix_expression  goto 148
	prefix_expression  goto 89


state 112
	multiplicative_expression : multiplicative_expression '/' . postfix_expression  (103)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 83
	postfix_expression  goto 149
	prefix_expression  goto 89


state 113
	additive_expression : additive_expression '+' . multiplicative_expression  (99)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 83
	multiplicative_expression  goto 150
	postfix_expression  goto 141
	prefix_expression  goto 89


state 114
	additive_expression : additive_expression '-' . multiplicative_expression  (100)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 83
	multiplicative_expression  goto 151
	postfix_expression  goto 141
	prefix_expression  goto 89


state 115
	statement : if_statement lbl .  (12)

	.  reduce 12


state 116
	assign_oper : MULEQ .  (69)

	.  reduce 69


state 117
	assign_oper : DIVEQ .  (70)

	.  reduce 70


state 118
	assign_oper : MODEQ .  (71)

	.  reduce 71


state 119
	assign_oper : ADDEQ .  (67)

	.  reduce 67


state 120
	assign_oper : SUBEQ .  (68)

	.  reduce 68


state 121
	assign_oper : LSHIFTEQ .  (72)

	.  reduce 72


state 122
	assign_oper : RSHIFTEQ .  (73)

	.  reduce 73


state 123
	assign_oper : ANDEQ .  (74)

	.  reduce 74


state 124
	assign_oper : XOREQ .  (75)

	.  reduce 75


state 125
	assign_oper : OREQ .  (76)

	.  reduce 76


state 126
	assign_oper : NEQ .  (66)

	.  reduce 66


state 127
	assign_oper : '=' .  (65)

	.  reduce 65


state 128
	assignment : postfix_expression assign_oper . assignment  (64)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 152


state 129
	postfix_expression : prefix_expression INCR .  (105)

	.  reduce 105


state 130
	postfix_expression : prefix_expression DECR .  (106)

	.  reduce 106


state 131
	function : declaration E '(' P param_list ')' F G '{' statements '}' .  (78)

	.  reduce 78


state 132
	statement : assignment ';' .  (10)

	.  reduce 10


state 133
	statement : while_statement lbl .  (13)

	.  reduce 13


state 134
	statement : for_statement lbl .  (14)

	.  reduce 14


state 135
	statement : declaration ';' .  (9)

	.  reduce 9


state 136
	statement : return ';' .  (8)

	.  reduce 8


state 137
	statement : call ';' .  (11)

	.  reduce 11


state 138
	while_statement : WHILE '(' lbl . expression ')' lbl statement jump  (88)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 153
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 141
	prefix_expression  goto 89


state 139
	for_statement : FOR '(' opt_expression . ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (89)

	';'  shift 154
	.  error


state 140
	if_statement : IF '(' expression . ')' lbl statement  (87)

	')'  shift 155
	.  error


state 141
	multiplicative_expression : postfix_expression .  (101)

	.  reduce 101


state 142
	call_list : var .  (18)

	.  reduce 18


state 143
	call_list : call_list . ',' var  (19)
	call : IDENTIFIER '(' call_list . ')'  (20)

	','  shift 156
	')'  shift 157
	.  error


state 144
	arrayref : arrayref '[' . expression ']'  (111)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 158
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 141
	prefix_expression  goto 89


state 145
	statements : '{' P statements . '}' Q  (6)

	'}'  shift 159
	.  error


state 146
	logical_or : logical_or LOR lbl . logical_and  (95)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	logical_and  goto 160
	terminal  goto 83
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 141
	prefix_expression  goto 89


state 147
	logical_and : logical_and LAND lbl . additive_expression  (97)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	.  error

	terminal  goto 83
	multiplicative_expression  goto 85
	additive_expression  goto 161
	postfix_expression  goto 141
	prefix_expression  goto 89


state 148
	multiplicative_expression : multiplicative_expression '*' postfix_expression .  (102)

	.  reduce 102


state 149
	multiplicative_expression : multiplicative_expression '/' postfix_expression .  (103)

	.  reduce 103


state 150
	additive_expression : additive_expression '+' multiplicative_expression .  (99)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (102)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (103)

	'*'  shift 111
	'/'  shift 112
	LAND  reduce 99
	LOR  reduce 99
	';'  reduce 99
	')'  reduce 99
	']'  reduce 99
	'+'  reduce 99
	'-'  reduce 99


state 151
	additive_expression : additive_expression '-' multiplicative_expression .  (100)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (102)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (103)

	'*'  shift 111
	'/'  shift 112
	LAND  reduce 100
	LOR  reduce 100
	';'  reduce 100
	')'  reduce 100
	']'  reduce 100
	'+'  reduce 100
	'-'  reduce 100


state 152
	assignment : postfix_expression assign_oper assignment .  (64)

	.  reduce 64


state 153
	while_statement : WHILE '(' lbl expression . ')' lbl statement jump  (88)

	')'  shift 162
	.  error


state 154
	for_statement : FOR '(' opt_expression ';' . lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (89)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 163


state 155
	if_statement : IF '(' expression ')' . lbl statement  (87)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 164


state 156
	call_list : call_list ',' . var  (19)
	addresses : .  (57)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 57

	var  goto 165
	addresses  goto 29


state 157
	call : IDENTIFIER '(' call_list ')' .  (20)

	.  reduce 20


state 158
	arrayref : arrayref '[' expression . ']'  (111)

	']'  shift 166
	.  error


state 159
	statements : '{' P statements '}' . Q  (6)
	Q : .  (83)

	.  reduce 83

	Q  goto 167


state 160
	logical_or : logical_or LOR lbl logical_and .  (95)
	logical_and : logical_and . LAND lbl additive_expression  (97)

	LAND  shift 110
	LOR  reduce 95
	';'  reduce 95
	')'  reduce 95
	']'  reduce 95


state 161
	logical_and : logical_and LAND lbl additive_expression .  (97)
	additive_expression : additive_expression . '+' multiplicative_expression  (99)
	additive_expression : additive_expression . '-' multiplicative_expression  (100)

	'+'  shift 113
	'-'  shift 114
	LAND  reduce 97
	LOR  reduce 97
	';'  reduce 97
	')'  reduce 97
	']'  reduce 97


state 162
	while_statement : WHILE '(' lbl expression ')' . lbl statement jump  (88)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 168


state 163
	for_statement : FOR '(' opt_expression ';' lbl . opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (89)
	opt_expression : .  (90)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	';'  reduce 90

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 98
	opt_expression  goto 169


state 164
	if_statement : IF '(' expression ')' lbl . statement  (87)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 170
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 165
	call_list : call_list ',' var .  (19)

	.  reduce 19


state 166
	arrayref : arrayref '[' expression ']' .  (111)

	.  reduce 111


state 167
	statements : '{' P statements '}' Q .  (6)

	.  reduce 6


state 168
	while_statement : WHILE '(' lbl expression ')' lbl . statement jump  (88)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 171
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 169
	for_statement : FOR '(' opt_expression ';' lbl opt_expression . ';' lbl opt_expression jump ')' lbl statement jump  (89)

	';'  shift 172
	.  error


state 170
	if_statement : IF '(' expression ')' lbl statement .  (87)

	.  reduce 87


state 171
	while_statement : WHILE '(' lbl expression ')' lbl statement . jump  (88)
	jump : .  (92)

	.  reduce 92

	jump  goto 173


state 172
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' . lbl opt_expression jump ')' lbl statement jump  (89)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 174


state 173
	while_statement : WHILE '(' lbl expression ')' lbl statement jump .  (88)

	.  reduce 88


state 174
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl . opt_expression jump ')' lbl statement jump  (89)
	opt_expression : .  (90)

	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 97
	')'  reduce 90

	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 98
	opt_expression  goto 175


state 175
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression . jump ')' lbl statement jump  (89)
	jump : .  (92)

	.  reduce 92

	jump  goto 176


state 176
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump . ')' lbl statement jump  (89)

	')'  shift 177
	.  error


state 177
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' . lbl statement jump  (89)
	lbl : .  (116)

	.  reduce 116

	lbl  goto 178


state 178
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl . statement jump  (89)
	return : .  (16)

	RETURN  shift 69
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 70
	FOR  shift 71
	IF  shift 72
	INCR  shift 73
	DECR  shift 74
	TRUE  shift 75
	FALSE  shift 76
	NUMBER  shift 77
	IDENTIFIER  shift 78
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 179
	logical_or  goto 81
	logical_and  goto 82
	terminal  goto 83
	expression  goto 84
	multiplicative_expression  goto 85
	additive_expression  goto 86
	if_statement  goto 87
	postfix_expression  goto 88
	prefix_expression  goto 89
	assignment  goto 91
	while_statement  goto 92
	for_statement  goto 93
	declaration  goto 94
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 95
	call  goto 96
	compoundtype  goto 21
	struct_or_union  goto 22


state 179
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement . jump  (89)
	jump : .  (92)

	.  reduce 92

	jump  goto 180


state 180
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump .  (89)

	.  reduce 89


Rules never reduced:
	storage_specifier : AUTO  (22)
	storage_specifier : REGISTER  (23)
	storage_specifier : STATIC  (24)
	storage_specifier : EXTERN  (25)
	storage_specifier : TYPEDEF  (26)


74 terminals, 48 nonterminals
117 grammar rules, 181 states
