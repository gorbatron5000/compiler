   0  $accept : start $end

   1  start :
   2        | global_declaration start

   3  global_declaration : function
   4                     | declaration ';'

   5  statements :
   6             | '{' P statements '}' Q
   7             | statement statements

   8  statement : return ';'
   9            | declaration ';'
  10            | assignment ';'
  11            | call ';'
  12            | if_statement lbl
  13            | while_statement lbl
  14            | for_statement lbl

  15  return : RETURN opt_expression
  16         |

  17  call_list :
  18            | var
  19            | call_list ',' var

  20  call : IDENTIFIER '(' call_list ')'

  21  declaration : type_specifier vars

  22  storage_specifier : AUTO
  23                    | REGISTER
  24                    | STATIC
  25                    | EXTERN
  26                    | TYPEDEF

  27  type_specifier : VOID
  28                 | CHAR
  29                 | SHORT
  30                 | INT
  31                 | LONG
  32                 | FLOAT
  33                 | DOUBLE
  34                 | SIGNED
  35                 | UNSIGNED
  36                 | compoundtype
  37                 | enumerator
  38                 | typedefname

  39  compoundtype : struct_or_union IDENTIFIER '{' '}'
  40               | struct_or_union '{' '}'
  41               | struct_or_union IDENTIFIER

  42  struct_or_union : STRUCT
  43                  | UNION

  44  enumerator : ENUMERATOR

  45  typedefname : TYPEDEF

  46  vars : var
  47       | var ',' vars

  48  var : addresses IDENTIFIER arrays

  49  addresses :
  50            | '*' addresses
  51            | '&' addresses

  52  arrays :
  53         | '[' num ']' arrays

  54  num : NUMBER

  55  assignment : expression
  56             | postfix_expression assign_oper assignment

  57  assign_oper : '='
  58              | NEQ
  59              | ADDEQ
  60              | SUBEQ
  61              | MULEQ
  62              | DIVEQ
  63              | MODEQ
  64              | LSHIFTEQ
  65              | RSHIFTEQ
  66              | ANDEQ
  67              | XOREQ
  68              | OREQ

  69  function : declaration E '(' P param_list ')' F ';'
  70           | declaration E '(' P param_list ')' F G '{' statements '}'

  71  E :

  72  F :

  73  G :

  74  P :

  75  Q :

  76  param_list :
  77             | type_specifier var ',' param_list
  78             | type_specifier var

  79  if_statement : IF '(' expression ')' lbl statement

  80  while_statement : WHILE '(' lbl expression ')' lbl statement jump

  81  for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump

  82  opt_expression :
  83                 | assignment

  84  jump :

  85  expression : logical_or

  86  logical_or : logical_and
  87             | logical_or LOR lbl logical_and

  88  logical_and : additive_expression
  89              | logical_and LAND lbl additive_expression

  90  additive_expression : multiplicative_expression
  91                      | additive_expression '+' multiplicative_expression
  92                      | additive_expression '-' multiplicative_expression

  93  multiplicative_expression : postfix_expression
  94                            | multiplicative_expression '*' postfix_expression
  95                            | multiplicative_expression '/' postfix_expression

  96  postfix_expression : prefix_expression
  97                     | prefix_expression INCR
  98                     | prefix_expression DECR

  99  prefix_expression : terminal
 100                    | INCR terminal
 101                    | DECR terminal

 102  arrayref :
 103           | arrayref '[' expression ']'

 104  terminal : TRUE
 105           | FALSE
 106           | IDENTIFIER arrayref
 107           | NUMBER

 108  lbl :

state 0
	$accept : . start $end  (0)
	start : .  (1)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	$end  reduce 1

	start  goto 14
	function  goto 15
	declaration  goto 16
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	global_declaration  goto 20
	compoundtype  goto 21
	struct_or_union  goto 22


state 1
	type_specifier : SIGNED .  (34)

	.  reduce 34


state 2
	struct_or_union : STRUCT .  (42)

	.  reduce 42


state 3
	typedefname : TYPEDEF .  (45)

	.  reduce 45


state 4
	struct_or_union : UNION .  (43)

	.  reduce 43


state 5
	type_specifier : VOID .  (27)

	.  reduce 27


state 6
	type_specifier : INT .  (30)

	.  reduce 30


state 7
	type_specifier : FLOAT .  (32)

	.  reduce 32


state 8
	type_specifier : CHAR .  (28)

	.  reduce 28


state 9
	type_specifier : SHORT .  (29)

	.  reduce 29


state 10
	type_specifier : LONG .  (31)

	.  reduce 31


state 11
	type_specifier : DOUBLE .  (33)

	.  reduce 33


state 12
	type_specifier : UNSIGNED .  (35)

	.  reduce 35


state 13
	enumerator : ENUMERATOR .  (44)

	.  reduce 44


state 14
	$accept : start . $end  (0)

	$end  accept


state 15
	global_declaration : function .  (3)

	.  reduce 3


state 16
	global_declaration : declaration . ';'  (4)
	function : declaration . E '(' P param_list ')' F ';'  (69)
	function : declaration . E '(' P param_list ')' F G '{' statements '}'  (70)
	E : .  (71)

	';'  shift 23
	'('  reduce 71

	E  goto 24


state 17
	type_specifier : enumerator .  (37)

	.  reduce 37


state 18
	type_specifier : typedefname .  (38)

	.  reduce 38


state 19
	declaration : type_specifier . vars  (21)
	addresses : .  (49)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 49

	vars  goto 27
	var  goto 28
	addresses  goto 29


state 20
	start : global_declaration . start  (2)
	start : .  (1)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	$end  reduce 1

	start  goto 30
	function  goto 15
	declaration  goto 16
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	global_declaration  goto 20
	compoundtype  goto 21
	struct_or_union  goto 22


state 21
	type_specifier : compoundtype .  (36)

	.  reduce 36


state 22
	compoundtype : struct_or_union . IDENTIFIER '{' '}'  (39)
	compoundtype : struct_or_union . '{' '}'  (40)
	compoundtype : struct_or_union . IDENTIFIER  (41)

	IDENTIFIER  shift 31
	'{'  shift 32
	.  error


state 23
	global_declaration : declaration ';' .  (4)

	.  reduce 4


state 24
	function : declaration E . '(' P param_list ')' F ';'  (69)
	function : declaration E . '(' P param_list ')' F G '{' statements '}'  (70)

	'('  shift 33
	.  error


state 25
	addresses : '*' . addresses  (50)
	addresses : .  (49)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 49

	addresses  goto 34


state 26
	addresses : '&' . addresses  (51)
	addresses : .  (49)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 49

	addresses  goto 35


state 27
	declaration : type_specifier vars .  (21)

	.  reduce 21


state 28
	vars : var .  (46)
	vars : var . ',' vars  (47)

	','  shift 36
	';'  reduce 46
	'('  reduce 46


state 29
	var : addresses . IDENTIFIER arrays  (48)

	IDENTIFIER  shift 37
	.  error


state 30
	start : global_declaration start .  (2)

	.  reduce 2


state 31
	compoundtype : struct_or_union IDENTIFIER . '{' '}'  (39)
	compoundtype : struct_or_union IDENTIFIER .  (41)

	'{'  shift 38
	IDENTIFIER  reduce 41
	'*'  reduce 41
	'&'  reduce 41


state 32
	compoundtype : struct_or_union '{' . '}'  (40)

	'}'  shift 39
	.  error


state 33
	function : declaration E '(' . P param_list ')' F ';'  (69)
	function : declaration E '(' . P param_list ')' F G '{' statements '}'  (70)
	P : .  (74)

	.  reduce 74

	P  goto 40


state 34
	addresses : '*' addresses .  (50)

	.  reduce 50


state 35
	addresses : '&' addresses .  (51)

	.  reduce 51


state 36
	vars : var ',' . vars  (47)
	addresses : .  (49)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 49

	vars  goto 41
	var  goto 28
	addresses  goto 29


state 37
	var : addresses IDENTIFIER . arrays  (48)
	arrays : .  (52)

	'['  shift 42
	';'  reduce 52
	','  reduce 52
	'('  reduce 52
	')'  reduce 52

	arrays  goto 43


state 38
	compoundtype : struct_or_union IDENTIFIER '{' . '}'  (39)

	'}'  shift 44
	.  error


state 39
	compoundtype : struct_or_union '{' '}' .  (40)

	.  reduce 40


state 40
	function : declaration E '(' P . param_list ')' F ';'  (69)
	function : declaration E '(' P . param_list ')' F G '{' statements '}'  (70)
	param_list : .  (76)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	')'  reduce 76

	param_list  goto 45
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 46
	compoundtype  goto 21
	struct_or_union  goto 22


state 41
	vars : var ',' vars .  (47)

	.  reduce 47


state 42
	arrays : '[' . num ']' arrays  (53)

	NUMBER  shift 47
	.  error

	num  goto 48


state 43
	var : addresses IDENTIFIER arrays .  (48)

	.  reduce 48


state 44
	compoundtype : struct_or_union IDENTIFIER '{' '}' .  (39)

	.  reduce 39


state 45
	function : declaration E '(' P param_list . ')' F ';'  (69)
	function : declaration E '(' P param_list . ')' F G '{' statements '}'  (70)

	')'  shift 49
	.  error


state 46
	param_list : type_specifier . var ',' param_list  (77)
	param_list : type_specifier . var  (78)
	addresses : .  (49)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 49

	var  goto 50
	addresses  goto 29


state 47
	num : NUMBER .  (54)

	.  reduce 54


state 48
	arrays : '[' num . ']' arrays  (53)

	']'  shift 51
	.  error


state 49
	function : declaration E '(' P param_list ')' . F ';'  (69)
	function : declaration E '(' P param_list ')' . F G '{' statements '}'  (70)
	F : .  (72)

	.  reduce 72

	F  goto 52


state 50
	param_list : type_specifier var . ',' param_list  (77)
	param_list : type_specifier var .  (78)

	','  shift 53
	')'  reduce 78


state 51
	arrays : '[' num ']' . arrays  (53)
	arrays : .  (52)

	'['  shift 42
	';'  reduce 52
	','  reduce 52
	'('  reduce 52
	')'  reduce 52

	arrays  goto 54


state 52
	function : declaration E '(' P param_list ')' F . ';'  (69)
	function : declaration E '(' P param_list ')' F . G '{' statements '}'  (70)
	G : .  (73)

	';'  shift 55
	'{'  reduce 73

	G  goto 56


state 53
	param_list : type_specifier var ',' . param_list  (77)
	param_list : .  (76)

	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	')'  reduce 76

	param_list  goto 57
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 46
	compoundtype  goto 21
	struct_or_union  goto 22


state 54
	arrays : '[' num ']' arrays .  (53)

	.  reduce 53


state 55
	function : declaration E '(' P param_list ')' F ';' .  (69)

	.  reduce 69


state 56
	function : declaration E '(' P param_list ')' F G . '{' statements '}'  (70)

	'{'  shift 58
	.  error


state 57
	param_list : type_specifier var ',' param_list .  (77)

	.  reduce 77


state 58
	function : declaration E '(' P param_list ')' F G '{' . statements '}'  (70)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 59
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 60
	FOR  shift 61
	IF  shift 62
	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 68
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 69
	';'  reduce 16
	'}'  reduce 5

	statement  goto 70
	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	if_statement  goto 77
	postfix_expression  goto 78
	prefix_expression  goto 79
	statements  goto 80
	assignment  goto 81
	while_statement  goto 82
	for_statement  goto 83
	declaration  goto 84
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 85
	call  goto 86
	compoundtype  goto 21
	struct_or_union  goto 22


state 59
	return : RETURN . opt_expression  (15)
	opt_expression : .  (82)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	';'  reduce 82

	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	postfix_expression  goto 78
	prefix_expression  goto 79
	assignment  goto 88
	opt_expression  goto 89


state 60
	while_statement : WHILE . '(' lbl expression ')' lbl statement jump  (80)

	'('  shift 90
	.  error


state 61
	for_statement : FOR . '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (81)

	'('  shift 91
	.  error


state 62
	if_statement : IF . '(' expression ')' lbl statement  (79)

	'('  shift 92
	.  error


state 63
	prefix_expression : INCR . terminal  (100)

	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	terminal  goto 93


state 64
	prefix_expression : DECR . terminal  (101)

	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	terminal  goto 94


state 65
	terminal : TRUE .  (104)

	.  reduce 104


state 66
	terminal : FALSE .  (105)

	.  reduce 105


state 67
	terminal : NUMBER .  (107)

	.  reduce 107


state 68
	call : IDENTIFIER . '(' call_list ')'  (20)
	terminal : IDENTIFIER . arrayref  (106)
	arrayref : .  (102)

	'('  shift 95
	MULEQ  reduce 102
	DIVEQ  reduce 102
	MODEQ  reduce 102
	ADDEQ  reduce 102
	SUBEQ  reduce 102
	LSHIFTEQ  reduce 102
	RSHIFTEQ  reduce 102
	ANDEQ  reduce 102
	XOREQ  reduce 102
	OREQ  reduce 102
	INCR  reduce 102
	DECR  reduce 102
	NEQ  reduce 102
	LAND  reduce 102
	LOR  reduce 102
	';'  reduce 102
	'*'  reduce 102
	'['  reduce 102
	'='  reduce 102
	'+'  reduce 102
	'-'  reduce 102
	'/'  reduce 102

	arrayref  goto 96


state 69
	statements : '{' . P statements '}' Q  (6)
	P : .  (74)

	.  reduce 74

	P  goto 97


state 70
	statements : statement . statements  (7)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 59
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 60
	FOR  shift 61
	IF  shift 62
	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 68
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 69
	';'  reduce 16
	'}'  reduce 5

	statement  goto 70
	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	if_statement  goto 77
	postfix_expression  goto 78
	prefix_expression  goto 79
	statements  goto 98
	assignment  goto 81
	while_statement  goto 82
	for_statement  goto 83
	declaration  goto 84
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 85
	call  goto 86
	compoundtype  goto 21
	struct_or_union  goto 22


state 71
	expression : logical_or .  (85)
	logical_or : logical_or . LOR lbl logical_and  (87)

	LOR  shift 99
	';'  reduce 85
	')'  reduce 85
	']'  reduce 85


state 72
	logical_or : logical_and .  (86)
	logical_and : logical_and . LAND lbl additive_expression  (89)

	LAND  shift 100
	LOR  reduce 86
	';'  reduce 86
	')'  reduce 86
	']'  reduce 86


state 73
	prefix_expression : terminal .  (99)

	.  reduce 99


state 74
	assignment : expression .  (55)

	.  reduce 55


state 75
	additive_expression : multiplicative_expression .  (90)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (94)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (95)

	'*'  shift 101
	'/'  shift 102
	LAND  reduce 90
	LOR  reduce 90
	';'  reduce 90
	')'  reduce 90
	']'  reduce 90
	'+'  reduce 90
	'-'  reduce 90


state 76
	logical_and : additive_expression .  (88)
	additive_expression : additive_expression . '+' multiplicative_expression  (91)
	additive_expression : additive_expression . '-' multiplicative_expression  (92)

	'+'  shift 103
	'-'  shift 104
	LAND  reduce 88
	LOR  reduce 88
	';'  reduce 88
	')'  reduce 88
	']'  reduce 88


state 77
	statement : if_statement . lbl  (12)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 105


state 78
	assignment : postfix_expression . assign_oper assignment  (56)
	multiplicative_expression : postfix_expression .  (93)

	MULEQ  shift 106
	DIVEQ  shift 107
	MODEQ  shift 108
	ADDEQ  shift 109
	SUBEQ  shift 110
	LSHIFTEQ  shift 111
	RSHIFTEQ  shift 112
	ANDEQ  shift 113
	XOREQ  shift 114
	OREQ  shift 115
	NEQ  shift 116
	'='  shift 117
	LAND  reduce 93
	LOR  reduce 93
	';'  reduce 93
	')'  reduce 93
	'*'  reduce 93
	'+'  reduce 93
	'-'  reduce 93
	'/'  reduce 93

	assign_oper  goto 118


state 79
	postfix_expression : prefix_expression .  (96)
	postfix_expression : prefix_expression . INCR  (97)
	postfix_expression : prefix_expression . DECR  (98)

	INCR  shift 119
	DECR  shift 120
	MULEQ  reduce 96
	DIVEQ  reduce 96
	MODEQ  reduce 96
	ADDEQ  reduce 96
	SUBEQ  reduce 96
	LSHIFTEQ  reduce 96
	RSHIFTEQ  reduce 96
	ANDEQ  reduce 96
	XOREQ  reduce 96
	OREQ  reduce 96
	NEQ  reduce 96
	LAND  reduce 96
	LOR  reduce 96
	';'  reduce 96
	')'  reduce 96
	'*'  reduce 96
	']'  reduce 96
	'='  reduce 96
	'+'  reduce 96
	'-'  reduce 96
	'/'  reduce 96


state 80
	function : declaration E '(' P param_list ')' F G '{' statements . '}'  (70)

	'}'  shift 121
	.  error


state 81
	statement : assignment . ';'  (10)

	';'  shift 122
	.  error


state 82
	statement : while_statement . lbl  (13)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 123


state 83
	statement : for_statement . lbl  (14)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 124


state 84
	statement : declaration . ';'  (9)

	';'  shift 125
	.  error


state 85
	statement : return . ';'  (8)

	';'  shift 126
	.  error


state 86
	statement : call . ';'  (11)

	';'  shift 127
	.  error


state 87
	terminal : IDENTIFIER . arrayref  (106)
	arrayref : .  (102)

	.  reduce 102

	arrayref  goto 96


state 88
	opt_expression : assignment .  (83)

	.  reduce 83


state 89
	return : RETURN opt_expression .  (15)

	.  reduce 15


state 90
	while_statement : WHILE '(' . lbl expression ')' lbl statement jump  (80)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 128


state 91
	for_statement : FOR '(' . opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (81)
	opt_expression : .  (82)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	';'  reduce 82

	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	postfix_expression  goto 78
	prefix_expression  goto 79
	assignment  goto 88
	opt_expression  goto 129


state 92
	if_statement : IF '(' . expression ')' lbl statement  (79)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 130
	multiplicative_expression  goto 75
	additive_expression  goto 76
	postfix_expression  goto 131
	prefix_expression  goto 79


state 93
	prefix_expression : INCR terminal .  (100)

	.  reduce 100


state 94
	prefix_expression : DECR terminal .  (101)

	.  reduce 101


state 95
	call : IDENTIFIER '(' . call_list ')'  (20)
	call_list : .  (17)
	addresses : .  (49)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 49
	','  reduce 17
	')'  reduce 17

	var  goto 132
	addresses  goto 29
	call_list  goto 133


state 96
	arrayref : arrayref . '[' expression ']'  (103)
	terminal : IDENTIFIER arrayref .  (106)

	'['  shift 134
	MULEQ  reduce 106
	DIVEQ  reduce 106
	MODEQ  reduce 106
	ADDEQ  reduce 106
	SUBEQ  reduce 106
	LSHIFTEQ  reduce 106
	RSHIFTEQ  reduce 106
	ANDEQ  reduce 106
	XOREQ  reduce 106
	OREQ  reduce 106
	INCR  reduce 106
	DECR  reduce 106
	NEQ  reduce 106
	LAND  reduce 106
	LOR  reduce 106
	';'  reduce 106
	')'  reduce 106
	'*'  reduce 106
	']'  reduce 106
	'='  reduce 106
	'+'  reduce 106
	'-'  reduce 106
	'/'  reduce 106


state 97
	statements : '{' P . statements '}' Q  (6)
	statements : .  (5)
	return : .  (16)

	RETURN  shift 59
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 60
	FOR  shift 61
	IF  shift 62
	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 68
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	'{'  shift 69
	';'  reduce 16
	'}'  reduce 5

	statement  goto 70
	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	if_statement  goto 77
	postfix_expression  goto 78
	prefix_expression  goto 79
	statements  goto 135
	assignment  goto 81
	while_statement  goto 82
	for_statement  goto 83
	declaration  goto 84
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 85
	call  goto 86
	compoundtype  goto 21
	struct_or_union  goto 22


state 98
	statements : statement statements .  (7)

	.  reduce 7


state 99
	logical_or : logical_or LOR . lbl logical_and  (87)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 136


state 100
	logical_and : logical_and LAND . lbl additive_expression  (89)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 137


state 101
	multiplicative_expression : multiplicative_expression '*' . postfix_expression  (94)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	terminal  goto 73
	postfix_expression  goto 138
	prefix_expression  goto 79


state 102
	multiplicative_expression : multiplicative_expression '/' . postfix_expression  (95)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	terminal  goto 73
	postfix_expression  goto 139
	prefix_expression  goto 79


state 103
	additive_expression : additive_expression '+' . multiplicative_expression  (91)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	terminal  goto 73
	multiplicative_expression  goto 140
	postfix_expression  goto 131
	prefix_expression  goto 79


state 104
	additive_expression : additive_expression '-' . multiplicative_expression  (92)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	terminal  goto 73
	multiplicative_expression  goto 141
	postfix_expression  goto 131
	prefix_expression  goto 79


state 105
	statement : if_statement lbl .  (12)

	.  reduce 12


state 106
	assign_oper : MULEQ .  (61)

	.  reduce 61


state 107
	assign_oper : DIVEQ .  (62)

	.  reduce 62


state 108
	assign_oper : MODEQ .  (63)

	.  reduce 63


state 109
	assign_oper : ADDEQ .  (59)

	.  reduce 59


state 110
	assign_oper : SUBEQ .  (60)

	.  reduce 60


state 111
	assign_oper : LSHIFTEQ .  (64)

	.  reduce 64


state 112
	assign_oper : RSHIFTEQ .  (65)

	.  reduce 65


state 113
	assign_oper : ANDEQ .  (66)

	.  reduce 66


state 114
	assign_oper : XOREQ .  (67)

	.  reduce 67


state 115
	assign_oper : OREQ .  (68)

	.  reduce 68


state 116
	assign_oper : NEQ .  (58)

	.  reduce 58


state 117
	assign_oper : '=' .  (57)

	.  reduce 57


state 118
	assignment : postfix_expression assign_oper . assignment  (56)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	postfix_expression  goto 78
	prefix_expression  goto 79
	assignment  goto 142


state 119
	postfix_expression : prefix_expression INCR .  (97)

	.  reduce 97


state 120
	postfix_expression : prefix_expression DECR .  (98)

	.  reduce 98


state 121
	function : declaration E '(' P param_list ')' F G '{' statements '}' .  (70)

	.  reduce 70


state 122
	statement : assignment ';' .  (10)

	.  reduce 10


state 123
	statement : while_statement lbl .  (13)

	.  reduce 13


state 124
	statement : for_statement lbl .  (14)

	.  reduce 14


state 125
	statement : declaration ';' .  (9)

	.  reduce 9


state 126
	statement : return ';' .  (8)

	.  reduce 8


state 127
	statement : call ';' .  (11)

	.  reduce 11


state 128
	while_statement : WHILE '(' lbl . expression ')' lbl statement jump  (80)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 143
	multiplicative_expression  goto 75
	additive_expression  goto 76
	postfix_expression  goto 131
	prefix_expression  goto 79


state 129
	for_statement : FOR '(' opt_expression . ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (81)

	';'  shift 144
	.  error


state 130
	if_statement : IF '(' expression . ')' lbl statement  (79)

	')'  shift 145
	.  error


state 131
	multiplicative_expression : postfix_expression .  (93)

	.  reduce 93


state 132
	call_list : var .  (18)

	.  reduce 18


state 133
	call_list : call_list . ',' var  (19)
	call : IDENTIFIER '(' call_list . ')'  (20)

	','  shift 146
	')'  shift 147
	.  error


state 134
	arrayref : arrayref '[' . expression ']'  (103)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 148
	multiplicative_expression  goto 75
	additive_expression  goto 76
	postfix_expression  goto 131
	prefix_expression  goto 79


state 135
	statements : '{' P statements . '}' Q  (6)

	'}'  shift 149
	.  error


state 136
	logical_or : logical_or LOR lbl . logical_and  (87)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	logical_and  goto 150
	terminal  goto 73
	multiplicative_expression  goto 75
	additive_expression  goto 76
	postfix_expression  goto 131
	prefix_expression  goto 79


state 137
	logical_and : logical_and LAND lbl . additive_expression  (89)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	.  error

	terminal  goto 73
	multiplicative_expression  goto 75
	additive_expression  goto 151
	postfix_expression  goto 131
	prefix_expression  goto 79


state 138
	multiplicative_expression : multiplicative_expression '*' postfix_expression .  (94)

	.  reduce 94


state 139
	multiplicative_expression : multiplicative_expression '/' postfix_expression .  (95)

	.  reduce 95


state 140
	additive_expression : additive_expression '+' multiplicative_expression .  (91)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (94)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (95)

	'*'  shift 101
	'/'  shift 102
	LAND  reduce 91
	LOR  reduce 91
	';'  reduce 91
	')'  reduce 91
	']'  reduce 91
	'+'  reduce 91
	'-'  reduce 91


state 141
	additive_expression : additive_expression '-' multiplicative_expression .  (92)
	multiplicative_expression : multiplicative_expression . '*' postfix_expression  (94)
	multiplicative_expression : multiplicative_expression . '/' postfix_expression  (95)

	'*'  shift 101
	'/'  shift 102
	LAND  reduce 92
	LOR  reduce 92
	';'  reduce 92
	')'  reduce 92
	']'  reduce 92
	'+'  reduce 92
	'-'  reduce 92


state 142
	assignment : postfix_expression assign_oper assignment .  (56)

	.  reduce 56


state 143
	while_statement : WHILE '(' lbl expression . ')' lbl statement jump  (80)

	')'  shift 152
	.  error


state 144
	for_statement : FOR '(' opt_expression ';' . lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (81)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 153


state 145
	if_statement : IF '(' expression ')' . lbl statement  (79)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 154


state 146
	call_list : call_list ',' . var  (19)
	addresses : .  (49)

	'*'  shift 25
	'&'  shift 26
	IDENTIFIER  reduce 49

	var  goto 155
	addresses  goto 29


state 147
	call : IDENTIFIER '(' call_list ')' .  (20)

	.  reduce 20


state 148
	arrayref : arrayref '[' expression . ']'  (103)

	']'  shift 156
	.  error


state 149
	statements : '{' P statements '}' . Q  (6)
	Q : .  (75)

	.  reduce 75

	Q  goto 157


state 150
	logical_or : logical_or LOR lbl logical_and .  (87)
	logical_and : logical_and . LAND lbl additive_expression  (89)

	LAND  shift 100
	LOR  reduce 87
	';'  reduce 87
	')'  reduce 87
	']'  reduce 87


state 151
	logical_and : logical_and LAND lbl additive_expression .  (89)
	additive_expression : additive_expression . '+' multiplicative_expression  (91)
	additive_expression : additive_expression . '-' multiplicative_expression  (92)

	'+'  shift 103
	'-'  shift 104
	LAND  reduce 89
	LOR  reduce 89
	';'  reduce 89
	')'  reduce 89
	']'  reduce 89


state 152
	while_statement : WHILE '(' lbl expression ')' . lbl statement jump  (80)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 158


state 153
	for_statement : FOR '(' opt_expression ';' lbl . opt_expression ';' lbl opt_expression jump ')' lbl statement jump  (81)
	opt_expression : .  (82)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	';'  reduce 82

	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	postfix_expression  goto 78
	prefix_expression  goto 79
	assignment  goto 88
	opt_expression  goto 159


state 154
	if_statement : IF '(' expression ')' lbl . statement  (79)
	return : .  (16)

	RETURN  shift 59
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 60
	FOR  shift 61
	IF  shift 62
	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 68
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 160
	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	if_statement  goto 77
	postfix_expression  goto 78
	prefix_expression  goto 79
	assignment  goto 81
	while_statement  goto 82
	for_statement  goto 83
	declaration  goto 84
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 85
	call  goto 86
	compoundtype  goto 21
	struct_or_union  goto 22


state 155
	call_list : call_list ',' var .  (19)

	.  reduce 19


state 156
	arrayref : arrayref '[' expression ']' .  (103)

	.  reduce 103


state 157
	statements : '{' P statements '}' Q .  (6)

	.  reduce 6


state 158
	while_statement : WHILE '(' lbl expression ')' lbl . statement jump  (80)
	return : .  (16)

	RETURN  shift 59
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 60
	FOR  shift 61
	IF  shift 62
	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 68
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 161
	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	if_statement  goto 77
	postfix_expression  goto 78
	prefix_expression  goto 79
	assignment  goto 81
	while_statement  goto 82
	for_statement  goto 83
	declaration  goto 84
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 85
	call  goto 86
	compoundtype  goto 21
	struct_or_union  goto 22


state 159
	for_statement : FOR '(' opt_expression ';' lbl opt_expression . ';' lbl opt_expression jump ')' lbl statement jump  (81)

	';'  shift 162
	.  error


state 160
	if_statement : IF '(' expression ')' lbl statement .  (79)

	.  reduce 79


state 161
	while_statement : WHILE '(' lbl expression ')' lbl statement . jump  (80)
	jump : .  (84)

	.  reduce 84

	jump  goto 163


state 162
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' . lbl opt_expression jump ')' lbl statement jump  (81)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 164


state 163
	while_statement : WHILE '(' lbl expression ')' lbl statement jump .  (80)

	.  reduce 80


state 164
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl . opt_expression jump ')' lbl statement jump  (81)
	opt_expression : .  (82)

	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 87
	')'  reduce 82

	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	postfix_expression  goto 78
	prefix_expression  goto 79
	assignment  goto 88
	opt_expression  goto 165


state 165
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression . jump ')' lbl statement jump  (81)
	jump : .  (84)

	.  reduce 84

	jump  goto 166


state 166
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump . ')' lbl statement jump  (81)

	')'  shift 167
	.  error


state 167
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' . lbl statement jump  (81)
	lbl : .  (108)

	.  reduce 108

	lbl  goto 168


state 168
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl . statement jump  (81)
	return : .  (16)

	RETURN  shift 59
	SIGNED  shift 1
	STRUCT  shift 2
	TYPEDEF  shift 3
	UNION  shift 4
	VOID  shift 5
	WHILE  shift 60
	FOR  shift 61
	IF  shift 62
	INCR  shift 63
	DECR  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NUMBER  shift 67
	IDENTIFIER  shift 68
	INT  shift 6
	FLOAT  shift 7
	CHAR  shift 8
	SHORT  shift 9
	LONG  shift 10
	DOUBLE  shift 11
	UNSIGNED  shift 12
	ENUMERATOR  shift 13
	';'  reduce 16

	statement  goto 169
	logical_or  goto 71
	logical_and  goto 72
	terminal  goto 73
	expression  goto 74
	multiplicative_expression  goto 75
	additive_expression  goto 76
	if_statement  goto 77
	postfix_expression  goto 78
	prefix_expression  goto 79
	assignment  goto 81
	while_statement  goto 82
	for_statement  goto 83
	declaration  goto 84
	enumerator  goto 17
	typedefname  goto 18
	type_specifier  goto 19
	return  goto 85
	call  goto 86
	compoundtype  goto 21
	struct_or_union  goto 22


state 169
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement . jump  (81)
	jump : .  (84)

	.  reduce 84

	jump  goto 170


state 170
	for_statement : FOR '(' opt_expression ';' lbl opt_expression ';' lbl opt_expression jump ')' lbl statement jump .  (81)

	.  reduce 81


Rules never reduced:
	storage_specifier : AUTO  (22)
	storage_specifier : REGISTER  (23)
	storage_specifier : STATIC  (24)
	storage_specifier : EXTERN  (25)
	storage_specifier : TYPEDEF  (26)


74 terminals, 44 nonterminals
109 grammar rules, 171 states
